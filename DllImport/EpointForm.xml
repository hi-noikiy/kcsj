<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EpointForm</name>
    </assembly>
    <members>
        <member name="T:Epoint.UI.Properties.Resources">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:Epoint.UI.Properties.Resources.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:Epoint.UI.Properties.Resources.Culture">
            <summary>
              使用此强类型资源类，为所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="T:Epoint.UI.AttribItem">
            <summary>
            属性子项
            </summary>
        </member>
        <member name="P:Epoint.UI.AttribItem.Key">
            <summary>
            属性名称
            </summary>
        </member>
        <member name="P:Epoint.UI.AttribItem.Value">
            <summary>
            属性值
            </summary>
        </member>
        <member name="T:Epoint.UI.WebControlAttributes">
            <summary>
            Web控件"属性"属性集合
            </summary>
        </member>
        <member name="M:Epoint.UI.WebControlAttributes.AddAtts(System.String,System.String)">
            <summary>
            添加属性
            </summary>
            <param name="attName"></param>
            <param name="attValue"></param>
        </member>
        <member name="M:Epoint.UI.WebControlAttributes.RenderAttToControl(System.Web.UI.WebControls.WebControl)">
            <summary>
            将属性添加到控件上
            </summary>
            <param name="ctl"></param>
        </member>
        <member name="M:Epoint.UI.WebControlAttributes.RenderAttToControl(System.Web.UI.HtmlControls.HtmlControl)">
            <summary>
            将属性添加到控件上
            </summary>
            <param name="ctl"></param>
        </member>
        <member name="M:Epoint.UI.WebControlAttributes.RemoveAtts(System.String)">
            <summary>
            删除属性
            </summary>
            <param name="attName"></param>
        </member>
        <member name="M:Epoint.UI.WebControlAttributes.Remove(Epoint.UI.AttribItem)">
            <summary>
            删除属性
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Epoint.UI.WebControlAttributes.CtlSerial(System.Xml.XmlDocument,System.Xml.XmlElement)">
            <summary>
            将集合对象序列化
            </summary>
            <param name="xml"></param>
            <param name="root"></param>
        </member>
        <member name="M:Epoint.UI.WebControlAttributes.CtlDeSerial(System.Xml.XmlNodeList)">
            <summary>
            反序列化到集合对象
            </summary>
            <param name="ChildNodes"></param>
        </member>
        <member name="P:Epoint.UI.WebControlAttributes.Item(System.Int32)">
            <summary>
            索引
            </summary>
        </member>
        <member name="T:Epoint.UI.Common">
            <summary>
            模块名称：通用方法组件。
            版    本：1.0.0.0。
            内    容：通用方法。
            摘    要：将一些静态的通用方法集中
            文 件 名：Common.cs。
            作    者：张雷              创建        2006年01月26日
            作    者：周剑峰            重整        2008年08月25日
            </summary>
        </member>
        <member name="M:Epoint.UI.Common.IsEmpty(System.Object)">
            <summary>
            判断指定对象是否为空。
            </summary>
            <param name="objValue">目标对象</param>
        </member>
        <member name="M:Epoint.UI.Common.IsBetween(System.Byte,System.Byte,System.Byte)">
            <summary>
            判断指定byte型数值是否位于另外两个byte型数值之间。
            </summary>
            <param name="n">目标数值</param>
            <param name="n1">边界数值</param>
            <param name="n2">边界数值</param>
        </member>
        <member name="M:Epoint.UI.Common.IsBetween(System.SByte,System.SByte,System.SByte)">
            <summary>
            判断指定sbyte型数值是否位于另外两个sbyte型数值之间。
            </summary>
            <param name="n">目标数值</param>
            <param name="n1">边界数值</param>
            <param name="n2">边界数值</param>
        </member>
        <member name="M:Epoint.UI.Common.IsBetween(System.Int16,System.Int16,System.Int16)">
            <summary>
            判断指定short型数值是否位于另外两个short型数值之间。
            </summary>
            <param name="n">目标数值</param>
            <param name="n1">边界数值</param>
            <param name="n2">边界数值</param>
        </member>
        <member name="M:Epoint.UI.Common.IsBetween(System.UInt16,System.UInt16,System.UInt16)">
            <summary>
            判断指定ushort型数值是否位于另外两个ushort型数值之间。
            </summary>
            <param name="n">目标数值</param>
            <param name="n1">边界数值</param>
            <param name="n2">边界数值</param>
        </member>
        <member name="M:Epoint.UI.Common.IsBetween(System.Int32,System.Int32,System.Int32)">
            <summary>
            判断指定int型数值是否位于另外两个int型数值之间。
            </summary>
            <param name="n">目标数值</param>
            <param name="n1">边界数值</param>
            <param name="n2">边界数值</param>
        </member>
        <member name="M:Epoint.UI.Common.IsBetween(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            判断指定uint型数值是否位于另外两个uint型数值之间。
            </summary>
            <param name="n">目标数值</param>
            <param name="n1">边界数值</param>
            <param name="n2">边界数值</param>
        </member>
        <member name="M:Epoint.UI.Common.IsBetween(System.Int64,System.Int64,System.Int64)">
            <summary>
            判断指定long型数值是否位于另外两个long型数值之间。
            </summary>
            <param name="n">目标数值</param>
            <param name="n1">边界数值</param>
            <param name="n2">边界数值</param>
        </member>
        <member name="M:Epoint.UI.Common.IsBetween(System.UInt64,System.UInt64,System.UInt64)">
            <summary>
            判断指定ulong型数值是否位于另外两个ulong型数值之间。
            </summary>
            <param name="n">目标数值</param>
            <param name="n1">边界数值</param>
            <param name="n2">边界数值</param>
        </member>
        <member name="M:Epoint.UI.Common.IsBetween(System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            判断指定decimal型数值是否位于另外两个decimal型数值之间。
            </summary>
            <param name="n">目标数值</param>
            <param name="n1">边界数值</param>
            <param name="n2">边界数值</param>
        </member>
        <member name="M:Epoint.UI.Common.ModifyBetween(System.Byte,System.Byte,System.Byte)">
            <summary>
            修正指定byte型数值使之位于另外两个byte型数值之间。
            </summary>
            <param name="n">目标数值</param>
            <param name="n1">边界数值</param>
            <param name="n2">边界数值</param>
        </member>
        <member name="M:Epoint.UI.Common.ModifyBetween(System.SByte,System.SByte,System.SByte)">
            <summary>
            修正指定sbyte型数值使之位于另外两个sbyte型数值之间。
            </summary>
            <param name="n">目标数值</param>
            <param name="n1">边界数值</param>
            <param name="n2">边界数值</param>
        </member>
        <member name="M:Epoint.UI.Common.ModifyBetween(System.Int16,System.Int16,System.Int16)">
            <summary>
            修正指定short数值使之位于另外两个short型数值之间。
            </summary>
            <param name="n">目标数值</param>
            <param name="n1">边界数值</param>
            <param name="n2">边界数值</param>
        </member>
        <member name="M:Epoint.UI.Common.ModifyBetween(System.UInt16,System.UInt16,System.UInt16)">
            <summary>
            修正指定ushort型数值使之位于另外两个ushort型数值之间。
            </summary>
            <param name="n">目标数值</param>
            <param name="n1">边界数值</param>
            <param name="n2">边界数值</param>
        </member>
        <member name="M:Epoint.UI.Common.ModifyBetween(System.Int32,System.Int32,System.Int32)">
            <summary>
            修正指定int型数值使之位于另外两个int型数值之间。
            </summary>
            <param name="n">目标数值</param>
            <param name="n1">边界数值</param>
            <param name="n2">边界数值</param>
        </member>
        <member name="M:Epoint.UI.Common.ModifyBetween(System.UInt32,System.UInt32,System.UInt32)">
            <summary>
            修正指定uint型数值使之位于另外两个uint型数值之间。
            </summary>
            <param name="n">目标数值</param>
            <param name="n1">边界数值</param>
            <param name="n2">边界数值</param>
        </member>
        <member name="M:Epoint.UI.Common.ModifyBetween(System.Int64,System.Int64,System.Int64)">
            <summary>
            修正指定long型数值使之位于另外两个long型数值之间。
            </summary>
            <param name="n">目标数值</param>
            <param name="n1">边界数值</param>
            <param name="n2">边界数值</param>
        </member>
        <member name="M:Epoint.UI.Common.ModifyBetween(System.UInt64,System.UInt64,System.UInt64)">
            <summary>
            修正指定ulong型数值使之位于另外两个ulong型数值之间。
            </summary>
            <param name="n">目标数值</param>
            <param name="n1">边界数值</param>
            <param name="n2">边界数值</param>
        </member>
        <member name="M:Epoint.UI.Common.ModifyBetween(System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            修正指定decimal型数值使之位于另外两个decimal型数值之间。
            </summary>
            <param name="n">目标数值</param>
            <param name="n1">边界数值</param>
            <param name="n2">边界数值</param>
        </member>
        <member name="M:Epoint.UI.Common.AreEqual(System.Single,System.Single,System.Single)">
            <summary>
            判断指定的两个float型数值是否相等。
            </summary>
            <param name="expected">期望值</param>
            <param name="actual">实际值</param>
            <param name="delta">误差值</param>
        </member>
        <member name="M:Epoint.UI.Common.AreEqual(System.Double,System.Double,System.Double)">
            <summary>
            判断指定的两个double型数值是否相等。
            </summary>
            <param name="expected">期望值</param>
            <param name="actual">实际值</param>
            <param name="delta">误差值</param>
        </member>
        <member name="M:Epoint.UI.Common.AreEqual(System.Object,System.Object)">
            <summary>
            判断指定的两个object对象是否相等。
            </summary>
            <param name="expected">期望值对象</param>
            <param name="actual">实际值对象</param>
        </member>
        <member name="M:Epoint.UI.Common.AreEqual(System.Array,System.Array)">
            <summary>
            判断指定的两个数组是否相等。
            </summary>
            <param name="expected">期望值数组</param>
            <param name="actual">实际值数组</param>
        </member>
        <member name="M:Epoint.UI.Common.IsValueTrue(System.Object)">
            <summary>
            转换的布尔值
            </summary>
            <param name="value">原值</param>
            <returns>布尔值</returns>
        </member>
        <member name="M:Epoint.UI.Common.IsEmpty(System.String)">
            <summary>
            判断指定字符串是否为空。
            </summary>
            <param name="strValue">目标字符串</param>
        </member>
        <member name="M:Epoint.UI.Common.GetSubString(System.String,System.Char,System.Char)">
            <summary>
            获取指定字符串中位于指定两个字符之间的部分。
            </summary>
            <param name="s">目标字符串</param>
            <param name="c1">开始字符</param>
            <param name="c2">结束字符</param>
        </member>
        <member name="M:Epoint.UI.Common.GetStartString(System.String,System.Char)">
            <summary>
            获取指定字符串中位于指定字符之前的部分。
            </summary>
            <param name="s">目标字符串</param>
            <param name="c">分界字符</param>
        </member>
        <member name="M:Epoint.UI.Common.GetEndString(System.String,System.Char)">
            <summary>
            获取指定字符串中位于指定字符之后的部分。
            </summary>
            <param name="s">目标字符串</param>
            <param name="c">分界字符</param>
        </member>
        <member name="M:Epoint.UI.Common.GetStringValue(System.Object)">
            <summary>
            获取指定对象的字串值。
            </summary>
            <param name="objValue">目标对象</param>
        </member>
        <member name="M:Epoint.UI.Common.GetStringValue(System.Object,System.String)">
            <summary>
            获取指定对象的字串值。
            说明：只接受.NET类库支持的格式字符串，具体参见MSDN文档。
            </summary>
            <param name="objValue">目标对象</param>
            <param name="strFormat">格式字符串</param>
        </member>
        <member name="M:Epoint.UI.Common.IsEmpty(System.Type)">
            <summary>
            判断指定类型是否为空。
            </summary>
            <param name="typValue">目标类型</param>
        </member>
        <member name="M:Epoint.UI.Common.IsNumericType(System.Object)">
            <summary>
            判断指定对象是否是数值型的。
            </summary>
        </member>
        <member name="M:Epoint.UI.Common.IsNumericType(System.Type)">
            <summary>
            判断指定类型是否是数值类型。
            </summary>
        </member>
        <member name="M:Epoint.UI.Common.AdjRedim(System.Array,System.Int32)">
            <summary>
            动态调整一维数组长度
            </summary>
        </member>
        <member name="M:Epoint.UI.Common.AdjRedim(System.Array,System.Int32[])">
            <summary>
            动态调整二维数组长度
            </summary>
        </member>
        <member name="M:Epoint.UI.Common.DelRedim1(System.Array,System.Int32)">
            <summary>
            删除一维数组一项
            </summary>
        </member>
        <member name="M:Epoint.UI.Common.DelRedim2(System.Array,System.Int32,System.Int32)">
            <summary>
            删除二维数组一行或一列(-1表示不删除)
            </summary>
        </member>
        <member name="M:Epoint.UI.Common.AddRedim2(System.Array,System.Int32,System.Int32)">
            <summary>
            添加二维数组一行或一列(-1表示不添加)
            </summary>
        </member>
        <member name="M:Epoint.UI.Common.DESEncrypt(System.String)">
            <summary>
            DES加密
            </summary>
            <param name="plainStr">明文字符串</param>
            <returns>密文</returns>
        </member>
        <member name="M:Epoint.UI.Common.DESEncrypt(System.IO.Stream)">
            <summary>
            DES加密
            </summary>
            <param name="instream">明文字符串</param>
            <returns>密文</returns>
        </member>
        <member name="M:Epoint.UI.Common.DESDecrypt(System.String)">
            <summary>
            DES解密
            </summary>
            <param name="encryptStr">密文字符串</param>
            <returns>明文</returns>
        </member>
        <member name="M:Epoint.UI.Common.DESDecrypt(System.IO.Stream)">
            <summary>
            DES解密
            </summary>
            <param name="instream">密文字符串</param>
            <returns>明文</returns>
        </member>
        <member name="M:Epoint.UI.Common.ShouldSaveProperty(System.Object,System.String)">
            <summary>
            判断属性是否需要保存
            </summary>
            <param name="obj">对象</param>
            <param name="PropName">属性名</param>
            <returns>是否需要保存</returns>
        </member>
        <member name="M:Epoint.UI.Common.ObjToString(System.Object)">
            <summary>
            对象保存为字符串
            </summary>
        </member>
        <member name="M:Epoint.UI.Common.StringToObj(System.String,System.Type)">
            <summary>
            字符串转为对象
            </summary>
        </member>
        <member name="M:Epoint.UI.Common.DeepCloneObj(System.Object)">
            <summary>
            深度复制对象
            </summary>
            <param name="obj">源对象</param>
            <returns>目标对象</returns>
        </member>
        <member name="M:Epoint.UI.Common.GetSupportType">
            <summary>
            取得支持的类型列表
            </summary>
        </member>
        <member name="M:Epoint.UI.Common.AddSupportType(System.Type,System.String)">
            <summary>
            添加支持的数据类型
            </summary>
        </member>
        <member name="M:Epoint.UI.Common.SupportInputList(System.Type)">
            <summary>
            取得支持的输入框类型
            </summary>
        </member>
        <member name="M:Epoint.UI.Common.CreateControl(System.Type,System.String)">
            <summary>
            根据名称创建对象
            </summary>
            <param name="baseType">对象基类类型</param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.Common.GetProperties(System.Type)">
            <summary>
            取得类型的属性列表
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.Common.GetPropertyIndex(System.Reflection.PropertyInfo)">
            <summary>
            取得属性序列化顺序
            </summary>
        </member>
        <member name="M:Epoint.UI.Common.SortPropertys(System.Reflection.PropertyInfo[])">
            <summary>
            将属性从小到大排序
            </summary>
        </member>
        <member name="M:Epoint.UI.Common.CreateObj(System.Type)">
            <summary>
            创建对象实例
            </summary>
        </member>
        <member name="M:Epoint.UI.Common.GetTypeByName(System.String)">
            <summary>
            根据名称取得类型
            </summary>
        </member>
        <member name="F:Epoint.UI.Common.recDomainID">
            <summary>
            记录程序执行域ID
            </summary>
        </member>
        <member name="F:Epoint.UI.Common.RecAsslst">
            <summary>
            记录加载的程序集列表
            </summary>
        </member>
        <member name="F:Epoint.UI.Common.supportType">
            <summary>
            支持类型列表
            </summary>
        </member>
        <member name="M:Epoint.UI.Common.GetAllSupportTypes">
            <summary>
            取得所有支付的类型
            </summary>
        </member>
        <member name="M:Epoint.UI.Common.GetTypes(System.Type,System.Boolean)">
            <summary>
            跟据基类取得宽派生类列表
            </summary>
        </member>
        <member name="M:Epoint.UI.Common.IsBaseOfType(System.Type,System.Type)">
            <summary>
            判断是否为某类型的继承
            </summary>
        </member>
        <member name="M:Epoint.UI.Common.IsObjectEqual``1(``0,``0)">
            <summary>
            判断对象是否相同
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj1"></param>
            <param name="obj2"></param>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.Common.MDMousePosChange(System.Windows.Forms.Control,System.Windows.Forms.Control,System.Windows.Forms.Message@)">
            <summary>
            将消息命令中的鼠标位置参数转换成父控件的位置
            返回是否为鼠标消息5
            </summary>
        </member>
        <member name="M:Epoint.UI.Common.LeftMousePosChange(System.Windows.Forms.Control,System.Windows.Forms.Control,System.Windows.Forms.Message@)">
            <summary>
            将消息命令中的鼠标位置参数转换成父控件的位置
            返回是否为鼠标消息
            </summary>
        </member>
        <member name="M:Epoint.UI.Common.MouseClickPosChange(System.Windows.Forms.Control,System.Windows.Forms.Control,System.Windows.Forms.Message@)">
            <summary>
            将消息命令中的鼠标位置参数转换成父控件的位置
            返回是否为鼠标消息
            </summary>
            <param name="ctl"></param>
            <param name="parent"></param>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.Common.Font2FontInfo(System.Drawing.Font,System.Web.UI.WebControls.FontInfo)">
            <summary>
            字体转换
            </summary>
            <param name="f"></param>
            <param name="fi"></param>
        </member>
        <member name="M:Epoint.UI.Common.getResURL(System.Web.UI.Page,System.String)">
            <summary>
            取得资源引用地址
            </summary>
            <param name="page">页面对象</param>
            <param name="resName">资源名称</param>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.Common.getPrintResURL(System.Web.UI.Page,System.String)">
            <summary>
            取得资源引用地址
            </summary>
            <param name="page">页面对象</param>
            <param name="resName">资源名称</param>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.Common.UrlEnCode(System.String)">
            <summary>
            Url编码转换
            </summary>
        </member>
        <member name="M:Epoint.UI.Common.IsChina(System.String)">
            <summary>
            判断是否为中文
            </summary>
        </member>
        <member name="M:Epoint.UI.Common.ColorChange(System.Drawing.Color)">
            <summary>
            将Color转为Web中的Color
            </summary>
        </member>
        <member name="M:Epoint.UI.Common.getJSLink(System.Web.UI.Page,System.String,System.String)">
            <summary>
            获取JS链接的方法
            </summary>
            <param name="page">调用页面</param>
            <param name="key">js键值</param>
            <param name="resName">资源名称</param>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.Common.ConverValToString(System.Object,System.Type,System.String)">
            <summary>
            将数据转为字符串
            </summary>
            <param name="value">数据值</param>
            <param name="DataType">数据类型</param>
            <param name="DataTypeFormat">数据类型扩展</param>
            <returns>返回字符串</returns>
        </member>
        <member name="M:Epoint.UI.Common.InvokeWebService(System.String,System.String,System.Object[])">
            <summary>
            通用的WebService调用函数，只要提供wsdl路径和方法名称、调用参数，动态调用并返回值
            </summary>
            <param name="wsdl"></param>
            <param name="methodName"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.Common.SetText(System.Windows.Forms.Control,System.String)">
            <summary>
            跨线程设置控件值
            </summary>
            <param name="ctl"></param>
            <param name="str"></param>
        </member>
        <member name="M:Epoint.UI.Common.SetCtlVal(System.Windows.Forms.CheckBox,System.Boolean)">
            <summary>
            跨线程设置控件值
            </summary>
            <param name="ctl"></param>
            <param name="ischecked"></param>
        </member>
        <member name="M:Epoint.UI.Common.GetFieldInStr(System.String)">
            <summary>
            取得字符串中含有的第一个字段
            </summary>
        </member>
        <member name="M:Epoint.UI.Common.ContainField(System.Object)">
            <summary>
            值中含有字段表达式
            </summary>
        </member>
        <member name="M:Epoint.UI.Common.GetCellIDPath(Epoint.UI.GridCell)">
            <summary>
            取得单元格对象的路径
            </summary>
            <param name="cell"></param>
            <returns></returns>
        </member>
        <member name="P:Epoint.UI.Common.Key">
            <summary>
            获取密钥
            </summary>
        </member>
        <member name="P:Epoint.UI.Common.IV">
            <summary>
            获取向量
            </summary>
        </member>
        <member name="T:Epoint.UI.Common.Moeny">
            <summary>
            货币类型
            </summary>
        </member>
        <member name="T:Epoint.UI.SerialIndexAttribute">
            <summary>
            序列化顺序特性
            </summary>
        </member>
        <member name="M:Epoint.UI.SerialIndexAttribute.#ctor(System.Int32)">
            <summary>
            构造函数
            </summary>
            <param name="index"></param>
        </member>
        <member name="P:Epoint.UI.SerialIndexAttribute.Index">
            <summary>
            取得和设置顺序
            </summary>
        </member>
        <member name="T:Epoint.UI.EpointForm">
            <summary>
            模块名称：EpointForm控件。
            版    本：1.0.0.0。
            内    容：EpointForm控件。
            摘    要：包含多个Sheet页面，控制保存整个表单信息。
            文 件 名：EpointForm.cs。
            作    者：周剑峰              创建        2009年8月21日
            </summary>
        </member>
        <member name="F:Epoint.UI.EpointForm.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:Epoint.UI.EpointForm.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:Epoint.UI.EpointForm.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="M:Epoint.UI.EpointForm.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Epoint.UI.EpointForm.Clone">
            <summary>
            复制对象
            </summary>
            <returns></returns>
        </member>
        <member name="F:Epoint.UI.EpointForm.CssDefines">
            <summary>
            CSS定义集合
            </summary>
        </member>
        <member name="M:Epoint.UI.EpointForm.EditSubSheet(Epoint.UI.IDesigner)">
            <summary>
            编辑子网格
            </summary>
            <param name="SubSheet"></param>
        </member>
        <member name="M:Epoint.UI.EpointForm.LoadSheet">
            <summary>
            加载Sheet页
            </summary>
        </member>
        <member name="M:Epoint.UI.EpointForm.AddSheetPage(Epoint.UI.IDesigner)">
            <summary>
            添加Sheet页
            </summary>
            <param name="sheet"></param>
        </member>
        <member name="M:Epoint.UI.EpointForm.GetNewSheetName">
            <summary>
            取得新Sheet页名称
            </summary>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.EpointForm.ExistSheet(System.String,Epoint.UI.Sheet)">
            <summary>
            判断是否存在某个Sheet页
            </summary>
            <param name="SheetName"></param>
            <param name="Exclude">排除项</param>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.EpointForm.Refresh">
            <summary>
            重刷新
            </summary>
        </member>
        <member name="M:Epoint.UI.EpointForm.SortSheet(System.Collections.ObjectModel.Collection{Epoint.UI.GridBase})">
            <summary>
            Sheet页排序
            </summary>
            <param name="sheets"></param>
        </member>
        <member name="M:Epoint.UI.EpointForm.sheet_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            页面鼠标按下事件
            </summary>
        </member>
        <member name="M:Epoint.UI.EpointForm.sheet_KeyUp(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            页面按键弹起事件
            </summary>
        </member>
        <member name="M:Epoint.UI.EpointForm.sheet_MouseClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            页面鼠标点击事件
            </summary>
        </member>
        <member name="M:Epoint.UI.EpointForm.sheet_SelectionChanged(System.Object,System.EventArgs)">
            <summary>
            引发单元格选择事件
            </summary>
        </member>
        <member name="M:Epoint.UI.EpointForm.tabs_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            页面选择改变事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Epoint.UI.EpointForm.sheet_gridPropertyChanged(System.Object,System.String,System.Object,System.Object)">
            <summary>
            网格属性改变事件
            </summary>
            <param name="sender"></param>
            <param name="PropertyName"></param>
            <param name="OldVal"></param>
            <param name="NewVal"></param>
        </member>
        <member name="M:Epoint.UI.EpointForm.SaveGrid(System.IO.Stream)">
            <summary>
            保存
            </summary>
        </member>
        <member name="M:Epoint.UI.EpointForm.LoadGrid(System.IO.Stream)">
            <summary>
            加载
            </summary>
        </member>
        <member name="M:Epoint.UI.EpointForm.Reset">
            <summary>
            重置对象
            </summary>
        </member>
        <member name="M:Epoint.UI.EpointForm.AddSheet(System.String)">
            <summary>
            添加Sheet页
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Epoint.UI.EpointForm.SetActivitySheetName(System.String)">
            <summary>
            设置活动页的名称
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Epoint.UI.EpointForm.DelActivitySheet">
            <summary>
            删除活动页
            </summary>
        </member>
        <member name="M:Epoint.UI.EpointForm.FindSheet(System.String)">
            <summary>
            根据Sheet名称查到Sheet对象
            </summary>
            <param name="SheetName"></param>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.EpointForm.DisableOpeRecord">
            <summary>
            禁用操作记录
            </summary>
        </member>
        <member name="M:Epoint.UI.EpointForm.EnableOpeRecord">
            <summary>
            启用操作记录
            </summary>
        </member>
        <member name="M:Epoint.UI.EpointForm.ChangeEdiorID(Epoint.UI.ICellEditor,System.String)">
            <summary>
            更改输入控件ID
            </summary>
            <param name="editor"></param>
            <param name="newID"></param>
        </member>
        <member name="M:Epoint.UI.EpointForm.ExportToPDF(System.IO.Stream)">
            <summary>
            导出到PDF
            </summary>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.EpointForm.ExportToDoc">
            <summary>
            导出到Word
            </summary>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.EpointForm.ExportToHtml">
            <summary>
            导出Html
            </summary>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.EpointForm.ExportToHtml(System.Web.UI.Page)">
            <summary>
            导出Html
            </summary>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.EpointForm.PrintPreview">
            <summary>
            打印预览
            </summary>
        </member>
        <member name="M:Epoint.UI.EpointForm.PageSetup">
            <summary>
            页面设置
            </summary>
        </member>
        <member name="M:Epoint.UI.EpointForm.Print">
            <summary>
            打印
            </summary>
        </member>
        <member name="E:Epoint.UI.EpointForm.AcititySheetChanged">
            <summary>
            页面切换改变事件
            </summary>
        </member>
        <member name="E:Epoint.UI.EpointForm.SelectionChanged">
            <summary>
            单元格选择事件
            </summary>
        </member>
        <member name="E:Epoint.UI.EpointForm.MouseClick">
            <summary>
            网格鼠标点击事件
            </summary>
        </member>
        <member name="E:Epoint.UI.EpointForm.MouseDown">
            <summary>
            网格鼠标点击事件
            </summary>
        </member>
        <member name="E:Epoint.UI.EpointForm.MouseUp">
            <summary>
            网格鼠标弹起事件
            </summary>
        </member>
        <member name="E:Epoint.UI.EpointForm.KeyUp">
            <summary>
            网格鼠标点击事件
            </summary>
        </member>
        <member name="E:Epoint.UI.EpointForm.PropertyChanged">
            <summary>
            网格属性改变事件
            </summary>
        </member>
        <member name="E:Epoint.UI.EpointForm.vScrollBarScroll">
            <summary>
            垂直滚动条滚动事件
            </summary>
        </member>
        <member name="E:Epoint.UI.EpointForm.hScrollBarScroll">
            <summary>
            水平滚动条滚动事件
            </summary>
        </member>
        <member name="P:Epoint.UI.EpointForm.DefaultSheetNum">
            <summary>
            默认页面数量
            </summary>
        </member>
        <member name="P:Epoint.UI.EpointForm.Sheets">
            <summary>
            取得多个页面对象
            </summary>
        </member>
        <member name="P:Epoint.UI.EpointForm.DataSource">
            <summary>
            绑定数据源
            </summary>
        </member>
        <member name="P:Epoint.UI.EpointForm.IsLoadedData">
            <summary>
            取得和设置是否已加载了数据
            </summary>
        </member>
        <member name="P:Epoint.UI.EpointForm.ActivitySheet">
            <summary>
            取得活动的Sheet页
            </summary>
        </member>
        <member name="P:Epoint.UI.EpointForm.SeparateType">
            <summary>
            取得和设置Sheet分割页类型
            </summary>
        </member>
        <member name="P:Epoint.UI.EpointForm.IsInDesign">
            <summary>
            取得和设置是否在设置状态
            </summary>
        </member>
        <member name="P:Epoint.UI.EpointForm.Cursor">
            <summary>
            取得和设置光标
            </summary>
        </member>
        <member name="P:Epoint.UI.EpointForm.UpdateTime">
            <summary>
            更新时间，用于记录Form对象状态
            </summary>
        </member>
        <member name="P:Epoint.UI.EpointForm.AllowDrop">
            <summary>
            获取或设置一个值，该值指示控件是否可以接受用户拖放到它上面的数据。
            </summary>
        </member>
        <member name="P:Epoint.UI.EpointForm.RunInBSsystem">
            <summary>
            设置是否在BS中运行
            </summary>
        </member>
        <member name="P:Epoint.UI.EpointForm.UseEpointData">
            <summary>
             取得和设置是否使用Epoint通用数据获取
            </summary>
        </member>
        <member name="P:Epoint.UI.EpointForm.PageAlign">
            <summary>
            页面显示对齐方式
            </summary>
        </member>
        <member name="P:Epoint.UI.EpointForm.EndScript">
            <summary>
            结束生成时运行的script
            </summary>
        </member>
        <member name="P:Epoint.UI.EpointForm.Script">
            <summary>
            脚本内容
            </summary>
        </member>
        <member name="P:Epoint.UI.EpointForm.ScriptRefLst">
            <summary>
            脚本引用内容
            </summary>
        </member>
        <member name="P:Epoint.UI.EpointForm.PrintInfo">
            <summary>
            取得和设置打印信息
            </summary>
        </member>
        <member name="P:Epoint.UI.EpointForm.IsOpeRecordEnabled">
            <summary>
            取得是否记录操作
            </summary>
        </member>
        <member name="T:Epoint.UI.EpointForm.SheetSeparateType">
            <summary>
            Sheet分割页类型
            </summary>
        </member>
        <member name="F:Epoint.UI.EpointForm.SheetSeparateType.None">
            <summary>
            无
            </summary>
        </member>
        <member name="F:Epoint.UI.EpointForm.SheetSeparateType.Navbar">
            <summary>
            分割条
            </summary>
        </member>
        <member name="F:Epoint.UI.EpointForm.SheetSeparateType.TabStrip">
            <summary>
            Table页
            </summary>
        </member>
        <member name="T:Epoint.UI.WebControls.WebGrid">
            <summary>
            模块名称：网格组件。
            版    本：1.0.0.0。
            内    容：Web网格。
            摘    要：将DBGrid结果转成Web控件。实现网络显示，数据回传，事件回传。
            文 件 名：WebGrid.cs。
            编 写 人：周剑峰。
            编写日期：2008年08月25日。
            </summary>
        </member>
        <member name="M:Epoint.UI.WebControls.WebGrid.GridWidth">
            <summary>
            取得网格宽度
            </summary>
        </member>
        <member name="M:Epoint.UI.WebControls.WebGrid.GetImage(System.Int32,System.Int32)">
            <summary>
            取得网格单元格中的图片
            </summary>
        </member>
        <member name="M:Epoint.UI.WebControls.WebGrid.Print">
            <summary>
            打印网格
            </summary>
        </member>
        <member name="M:Epoint.UI.WebControls.WebGrid.RegPostBackEvent(System.Web.UI.WebControls.WebControl,System.String)">
            <summary>
            注册子控件事件
            </summary>
            <param name="Ctl">控件</param>
            <param name="eventName">事件名</param>
        </member>
        <member name="M:Epoint.UI.WebControls.WebGrid.OnInit(System.EventArgs)">
            <summary>
            页面加载前创建子控件
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Epoint.UI.WebControls.WebGrid.OnPreRender(System.EventArgs)">
            <summary>
            继承处理输出前事件
            </summary>
        </member>
        <member name="M:Epoint.UI.WebControls.WebGrid.Render(System.Web.UI.HtmlTextWriter)">
            <summary>
            输出控件内容
            </summary>
            <param name="output"></param>
        </member>
        <member name="M:Epoint.UI.WebControls.WebGrid.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)">
            <summary>
            加载返回数据处理
            </summary>
            <param name="postDataKey"></param>
            <param name="postCollection"></param>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.WebControls.WebGrid.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent">
            <summary>
            出发回退事件
            </summary>
        </member>
        <member name="M:Epoint.UI.WebControls.WebGrid.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)">
            <summary>
            激发回退事件
            </summary>
            <param name="eventArgument">参数</param>
        </member>
        <member name="M:Epoint.UI.WebControls.WebGrid.PrintGridRender(Epoint.UI.Grid,System.Web.UI.HtmlTextWriter,System.String,System.String,System.String)">
            <summary>
            生成打印Guid
            </summary>
            <param name="grid"></param>
            <param name="output"></param>
            <param name="id"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:Epoint.UI.WebControls.WebGrid.RichTextRender(Epoint.UI.RichTextCell,System.Web.UI.HtmlTextWriter,System.String,System.String,System.String)">
            <summary>
            输出副文本内容内容
            </summary>
            <param name="grid">网格对象</param>
            <param name="output">HtmlTextWriter对象</param>
            <param name="id">标识</param>
            <param name="width">宽</param>
            <param name="height">高</param>
        </member>
        <member name="M:Epoint.UI.WebControls.WebGrid.GridRender(Epoint.UI.GridBase,System.Web.UI.HtmlTextWriter,System.String,System.String,System.String)">
            <summary>
            输出网格内容
            </summary>
            <param name="grid">网格对象</param>
            <param name="output">HtmlTextWriter对象</param>
            <param name="id">标识</param>
            <param name="width">宽</param>
            <param name="height">高</param>
        </member>
        <member name="M:Epoint.UI.WebControls.WebGrid.RenderTableCell(Epoint.UI.Grid,System.Web.UI.HtmlTextWriter,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            输出Table Td
            </summary>
            <param name="grid"></param>
            <param name="output"></param>
            <param name="id"></param>
            <param name="maxleft"></param>
            <param name="colIndex"></param>
            <param name="rowIndex"></param>
        </member>
        <member name="M:Epoint.UI.WebControls.WebGrid.RenderTableRow(Epoint.UI.Grid,System.Web.UI.HtmlTextWriter,System.Int32)">
            <summary>
            输入Table tr
            </summary>
            <param name="grid"></param>
            <param name="output"></param>
            <param name="rowIndex"></param>
        </member>
        <member name="M:Epoint.UI.WebControls.WebGrid.RenderHeader(Epoint.UI.Grid,System.Web.UI.HtmlTextWriter,System.String,System.Int32,System.Int32)">
            <summary>
            输入Table
            </summary>
            <param name="grid"></param>
            <param name="output"></param>
            <param name="id"></param>
            <param name="startCol"></param>
            <param name="endCol"></param>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.WebControls.WebGrid.TxtAlignCSS(System.Drawing.StringFormat)">
            <summary>
            文字位置样式
            </summary>
            <param name="sf"></param>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.WebControls.WebGrid.BoderCSS(Epoint.UI.LineStyle,System.String)">
            <summary>
            边框样式
            </summary>
            <param name="ls"></param>
            <param name="direction"></param>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.WebControls.WebGrid.GetLineDashStyle(Epoint.UI.LineDashStyle)">
            <summary>
            线样式
            </summary>
            <param name="da"></param>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.WebControls.WebGrid.Font2FontInfo(System.Drawing.Font,System.Web.UI.WebControls.FontInfo)">
            <summary>
            字体转换
            </summary>
            <param name="f"></param>
            <param name="fi"></param>
        </member>
        <member name="M:Epoint.UI.WebControls.WebGrid.WriteDefaultCellValue(System.String,Epoint.UI.GridCell,System.Web.UI.HtmlTextWriter)">
            <summary>
            编写默认输出
            </summary>
            <param name="Value">显示值</param>
            <param name="cell"></param>
            <param name="output"></param>
        </member>
        <member name="P:Epoint.UI.WebControls.WebGrid.ReportFileName">
            <summary>
            报表文件名
            </summary>
        </member>
        <member name="P:Epoint.UI.WebControls.WebGrid.ImageGetPage">
            <summary>
            取得图片的URL
            </summary>
        </member>
        <member name="P:Epoint.UI.WebControls.WebGrid.PrintPage">
            <summary>
            打印页面
            </summary>
        </member>
        <member name="P:Epoint.UI.WebControls.WebGrid.IsOnPrint">
            <summary>
            是否打印
            </summary>
        </member>
        <member name="P:Epoint.UI.WebControls.WebGrid.ShowEdit">
            <summary>
            是否显示输入控件
            </summary>
        </member>
        <member name="P:Epoint.UI.WebControls.WebGrid.RenderControlDirectory">
            <summary>
            直接输出控件内容
            </summary>
        </member>
        <member name="P:Epoint.UI.WebControls.WebGrid.EndRenderCtls">
            <summary>
            取得和设置需要延缓输入的控件
            主要添加一些校验控件，防止在与输入控件一起时影响显示位置
            </summary>
        </member>
        <member name="P:Epoint.UI.WebControls.WebGrid.EndRenderCtlsStr">
            <summary>
            取得和设置需要延缓输入的控件
            主要添加一些校验控件，防止在与输入控件一起时影响显示位置
            </summary>
        </member>
        <member name="E:Epoint.UI.WebControls.WebGrid.getExternStream">
            <summary>
            取得额外对象流事件
            </summary>
        </member>
        <member name="P:Epoint.UI.WebControls.WebGrid.Grid">
            <summary>
            取得Grid对象实体
            </summary>
        </member>
        <member name="P:Epoint.UI.WebControls.WebGrid.TextWriter">
            <summary>
            流输出对象
            </summary>
        </member>
        <member name="T:Epoint.UI.WebControls.WebGrid.GridExternStream">
            <summary>
            额外对象流事件代理
            </summary>
            <param name="sender"></param>
            <param name="ReportFileName"></param>
            <returns></returns>
        </member>
        <member name="T:Epoint.UI.Grid">
            <summary>
            模块名称：网格组件。
            版    本：1.0.0.0。
            内    容：网格。
            摘    要：实现基本网络的扩展：存档、单元格单选多选、键盘操作、单元格值显示、滚动条处理、
                    单元格边框显示、单元格合并处理、单元格值表达式计算、单元格大小调整、
                    单元格选择事件、子控件处理。
            文 件 名：Grid.cs。 
            编 写 人：周剑峰。
            编写日期：2008年08月25日。
            </summary>
        </member>
        <member name="T:Epoint.UI.GridBase">
            <summary>
            模块名称：网格组件。
            版    本：1.0.0.0。
            内    容：网格基类。
            摘    要：网格基类，实现网格的基本构造。
                        主要实现基本网格的展示，网格固定行列，打印，滚动条处理。
                        处理网格中的基本属性。
            文 件 名：GridBase.cs。
            作    者：晏立              创建        2004年
            作    者：张雷              重整        2006年01月26日
            作    者：周剑峰            重整        2008年08月25日
            作    者：周剑峰            增加Activex功能        2010年06月18日
            </summary>
        </member>
        <member name="T:Epoint.UI.IObjectSafety">
            <summary>
            IObjectSafety 的摘要说明。
            </summary>
        </member>
        <member name="M:Epoint.UI.IObjectSafety.GetInterfacceSafyOptions(System.Int32,System.Int32@,System.Int32@)">
            <summary>
            COM接口用
            </summary>
            <param name="riid"></param>
            <param name="pdwSupportedOptions"></param>
            <param name="pdwEnabledOptions"></param>
        </member>
        <member name="M:Epoint.UI.IObjectSafety.SetInterfaceSafetyOptions(System.Int32,System.Int32,System.Int32)">
            <summary>
            COM接口用
            </summary>
            <param name="riid"></param>
            <param name="dwOptionsSetMask"></param>
            <param name="dwEnabledOptions"></param>
        </member>
        <member name="M:Epoint.UI.GridBase.#ctor">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridBase.Clone">
            <summary>
            克隆网格对象。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridBase.CopyTo(Epoint.UI.GridBase)">
            <summary>
            将当前网格的设置复制到目标网格。
            </summary>
            <param name="grid">目标网格</param>
        </member>
        <member name="M:Epoint.UI.GridBase.Reset">
            <summary>
            重置单元格。
            说明：将单元格所有属性恢复为默认值。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridBase.NotifyChange``1(``0@,``0)">
            <summary>
            属性变动通知
            </summary>
        </member>
        <member name="M:Epoint.UI.GridBase.ToString">
            <summary>
            取得对象字符串
            </summary>
            <returns>字符串</returns>
        </member>
        <member name="M:Epoint.UI.GridBase.NotifyPropertyChanged(System.Object,System.Object,System.Object)">
            <summary>
            属性改变通知
            </summary>
            <param name="sender"></param>
            <param name="OldVal"></param>
            <param name="NewVal"></param>
        </member>
        <member name="M:Epoint.UI.GridBase.ReCalcGrid">
            <summary>
            重计算网格
            </summary>
        </member>
        <member name="M:Epoint.UI.GridBase.CalcGridChildControls(System.Boolean)">
            <summary>
            计算网格子控件位置
            </summary>
            <param name="refreshAll">是否刷新全部</param>
        </member>
        <member name="M:Epoint.UI.GridBase.CalcGridColsCoord(System.Int32)">
            <summary>
            计算网格列坐标。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridBase.CalcGridRowsCoord(System.Int32)">
            <summary>
            计算网格行坐标。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridBase.CalcScrollBars(System.Int32,System.Int32)">
            <summary>
            计算滚动条。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridBase.CalcVScrollBar(System.Int32)">
            <summary>
            计算垂直滚动条。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridBase.CalcHScrollBar(System.Int32)">
            <summary>
            计算水平滚动条。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridBase.CalcPrintPage">
            <summary>
            计算打印页
            </summary>
        </member>
        <member name="M:Epoint.UI.GridBase.CalceTextSize(System.String,System.Drawing.Font,System.Int32)">
            <summary>
            计算文字大小
            </summary>
        </member>
        <member name="M:Epoint.UI.GridBase.SplitStringBySize(System.String,System.Drawing.Font,System.Int32,System.Int32,System.Int32)">
            <summary>
            根据文字显示取得第N段字
            </summary>
            <param name="str"></param>
            <param name="fnt"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="Page"></param>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.GridBase.DrawGridCells(System.Drawing.Graphics)">
            <summary>
            绘制所有网格单元。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridBase.DrawFixedColsFixedRowsCells(System.Drawing.Graphics)">
            <summary>
            绘制固定列固定行重叠区域。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridBase.DrawFixedColsCells(System.Drawing.Graphics)">
            <summary>
            绘制固定列区域。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridBase.DrawFixedRowsCells(System.Drawing.Graphics)">
            <summary>
            绘制固定行区域。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridBase.DrawFixedColsStatRowsCells(System.Drawing.Graphics)">
            <summary>
            绘制固定列统计行区域。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridBase.DrawFixedRowsStatColsCells(System.Drawing.Graphics)">
            <summary>
            绘制固定行统计列重叠区域。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridBase.DrawStatRowsCells(System.Drawing.Graphics)">
            <summary>
            绘制统计行区域。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridBase.DrawStatColsCells(System.Drawing.Graphics)">
            <summary>
            绘制统计列区域。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridBase.DrawStatColsStatRowsCells(System.Drawing.Graphics)">
            <summary>
            绘制统计列统计行重叠区域。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridBase.DrawCellsCoveredByEdges(System.Drawing.Graphics)">
            <summary>
            绘制被固定行列覆盖的单元格（不为显示，主要用于控制）
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:Epoint.UI.GridBase.DrawDataCells(System.Drawing.Graphics)">
            <summary>
            绘制数据区域。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridBase.DrawGridCell(System.Drawing.Graphics,System.Int32,System.Int32)">
            <summary>
            绘制网格单元。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridBase.DrawGridCell(System.Drawing.Graphics,Epoint.UI.GridCell)">
            <summary>
            绘制网格单元。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridBase.DrawTitle(System.Drawing.Graphics,Epoint.UI.GridCell)">
            <summary>
            绘制标题栏
            </summary>
        </member>
        <member name="F:Epoint.UI.GridBase.EnableReCalc">
            <summary>
            重新绘制使能
            </summary>
        </member>
        <member name="M:Epoint.UI.GridBase.ReDraw">
            <summary>
            重新绘制
            </summary>
        </member>
        <member name="M:Epoint.UI.GridBase.DrawGrid(System.Drawing.Graphics)">
            <summary>
            绘制网格。
            说明：建议派生类中所有计算和绘制功能放在该方法中集中调用。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridBase.DrawGridLine(System.Drawing.Graphics)">
            <summary>
            绘制分割线
            </summary>
        </member>
        <member name="M:Epoint.UI.GridBase.DrawScrollBars(System.Drawing.Graphics)">
            <summary>
            绘制滚动条。
            说明：绘制网格右下角水平、垂直滚动条重叠区域。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridBase.DrawPrintLine(System.Drawing.Graphics)">
            <summary>
            绘制打印线
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:Epoint.UI.GridBase.SidelineSealing(System.Int32)">
            <summary>
            边线封口
            </summary>
            <param name="pageIndex">页面索引</param>
        </member>
        <member name="M:Epoint.UI.GridBase.CallWndProc(System.Windows.Forms.Message@)">
            <summary>
            从外部导入事件消息
            </summary>
        </member>
        <member name="M:Epoint.UI.GridBase.vScrollBar1_Scroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
            <summary>
            垂直滚动条滚动事件。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridBase.hScrollBar1_Scroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
            <summary>
            水平滚动条滚动事件。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridBase.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
            <summary>
            鼠标滚动。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridBase.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            重载绘制事件。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridBase.GetPrintPageArea(System.Int32,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            取得打印页的边界
            </summary>
            <param name="page">页号</param>
            <param name="startRow">返回开始行</param>
            <param name="endRow">返回结束行</param>
            <param name="startCol">返回开始列</param>
            <param name="endCol">返回结束列</param>
        </member>
        <member name="M:Epoint.UI.GridBase.printDoc_BeginPrint(System.Object,System.Drawing.Printing.PrintEventArgs)">
            <summary>
            准备打印事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Epoint.UI.GridBase.printDoc_PrintPage(System.Object,System.Drawing.Printing.PrintPageEventArgs)">
            <summary>
            打印页面
            </summary>
        </member>
        <member name="M:Epoint.UI.GridBase.printDoc_EndPrint(System.Object,System.Drawing.Printing.PrintEventArgs)">
            <summary>
            结束打印事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Epoint.UI.GridBase.PrintPreview">
            <summary>
            打印预览
            </summary>
        </member>
        <member name="M:Epoint.UI.GridBase.PageSetup">
            <summary>
            页面设置
            </summary>
        </member>
        <member name="M:Epoint.UI.GridBase.Print">
            <summary>
            打印
            </summary>
        </member>
        <member name="M:Epoint.UI.GridBase.GetCellActiveValue(Epoint.UI.GridCell,System.Object)">
            <summary>
            计算单元实际值
            </summary>
            <param name="cell"></param>
            <param name="cellValue"></param>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.GridBase.SetCellActiveValue(Epoint.UI.GridCell,System.Object,System.Object)">
            <summary>
            设置单元实际值
            </summary>
            <param name="cell"></param>
            <param name="cellValue"></param>
            <param name="newValue"></param>
            <returns></returns>
        </member>
        <member name="F:Epoint.UI.GridBase.components">
            <summary> 
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridBase.Dispose(System.Boolean)">
            <summary> 
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:Epoint.UI.GridBase.InitializeComponent">
            <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="F:Epoint.UI.GridBase.vScrollBar1">
            <summary>
            取得和设置垂直滚动条
            </summary>
        </member>
        <member name="F:Epoint.UI.GridBase.hScrollBar1">
            <summary>
            取得和设置水平滚动条
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.BorderStyle">
            <summary>
            取得和设置边框样式
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.AllowDrop">
            <summary>
            取得和设置是否支持拖放
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.BackColor">
            <summary>
            取得和设置背景色
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.BackgroundImage">
            <summary>
            取得和设置背景图
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.BackgroundImageLayout">
            <summary>
            取得和设置背景图部局
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.DataBindings">
            <summary>
            取得和设置为该控件获取数据绑定
            </summary>
        </member>
        <member name="E:Epoint.UI.GridBase.vScrollBarScroll">
            <summary>
            垂直滚动条滚动事件
            </summary>
        </member>
        <member name="E:Epoint.UI.GridBase.hScrollBarScroll">
            <summary>
            水平滚动条滚动事件
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.HitTest">
            <summary>
            获取鼠标在网格客户区的坐标。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.RunInBSsystem">
            <summary>
            取得和设置是否在BS中运行
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.Index">
            <summary>
            取得和设置展示顺序
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.SheetName">
            <summary>
            取得和设置页面名称
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.TitleImgUrl">
            <summary>
            取得和设置标题区图片引用地址
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.ParentEpointForm">
            <summary>
            取得父表单
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.IsInDesign">
            <summary>
            取得和设置是否在设置状态
            </summary>
        </member>
        <member name="E:Epoint.UI.GridBase.gridPropertyChanged">
            <summary>
            网格属性改变事件
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.Cols">
            <summary>
            获取网格列集合。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.Rows">
            <summary>
            获取网格行集合。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.Cells">
            <summary>
            获取网格单元集合。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.ColsCount">
            <summary>
            获取或设置网格列数。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.RowsCount">
            <summary>
            获取或设置网格行数。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.FixedColsCount">
            <summary>
            获取或设置固定列数。
            </summary> 
        </member>
        <member name="P:Epoint.UI.GridBase.FixedRowsCount">
            <summary>
            获取或设置固定行数。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.StatColsCount">
            <summary>
            获取或设置统计列数。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.StatRowsCount">
            <summary>
            获取或设置统计行数。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.TitleRowCount">
            <summary>
            标题行数
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.TitleColCount">
            <summary>
            标题列数
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.EndRowCount">
            <summary>
            取得和设置置底行数
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.GridLineStyle">
            <summary>
            获取或设置网格分割线风格。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.GridLineColor">
            <summary>
            获取或设置网格分隔线颜色。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.DefaultColWidth">
            <summary>
            获取或设置默认列宽。
            说明：修改该属性值将会改变所有列的宽度。
            </summary>  
        </member>
        <member name="P:Epoint.UI.GridBase.DefaultRowHeight">
            <summary>
            获取或设置默认行高。
            说明：修改该属性值将会改变所有行的高度。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.SeparateLineColor">
            <summary>
            区域分割线颜色
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.HideScrollBar">
            <summary>
            是否隐藏滚动条
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.StartX">
            <summary>
            图表起始位置X
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.StartY">
            <summary>
            图表起始位置Y
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.DefaultFont">
            <summary>
            取得和设置默认字体
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.ShowPrintLine">
            <summary>
            显示打印线
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.WidthScale">
            <summary>
            取得和设置宽度比例
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.HeightScale">
            <summary>
            取得和设置高度比例
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.PrintPageNum">
            <summary>
            取得打印页数
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.PrintInfo">
            <summary>
            取得和设置打印信息
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.FixedColsWidth">
            <summary>
            获取固定列总宽度（包括分割线宽度）。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.ScrollColsWidth">
            <summary>
            获取滚动列总宽度（包括分割线宽度）。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.StatColsWidth">
            <summary>
            获取统计列总宽度（包括分割线宽度）。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.GridColsWidth">
            <summary>
            获取网格列总宽度（包括分割线宽度）。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.FixedRowsHeight">
            <summary>
            获取固定行总高度（包括分割线宽度）。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.ScrollRowsHeight">
            <summary>
            获取滚动行总高度（包括分割线宽度）。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.StatRowsHeight">
            <summary>
            获取统计行总高度（包括分割线宽度）。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.GridRowsHeight">
            <summary>
            获取网格行总高度（包括分割线宽度）。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.VisibleColsCount">
            <summary>
            获取可见列数（不包括固定列、统计列、部分可见列）。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.VisibleRowsCount">
            <summary>
            获取可见行数（不包括固定行、统计行、部分可见行）。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.HGridLineWidth">
            <summary>
            获取水平分割线宽度。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.VGridLineHeight">
            <summary>
            获取垂直分割线高度。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.FixedColsRight">
            <summary>
            获取固定列右坐标。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.FixedRowsBottom">
            <summary>
            获取固定行底坐标。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.StatColsLeft">
            <summary>
            获取统计列左坐标。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.StatRowsTop">
            <summary>
            获取统计行顶坐标。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.RectFixedColsFixedRows">
            <summary>
            获取固定列固定行重叠区域。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.RectFixedCols">
            <summary>
            获取固定列区域。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.RectFixedRows">
            <summary>
            获取固定行区域。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.RectFixedColsStatRows">
            <summary>
            获取固定列统计行重叠区域。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.RectFixedRowsStatCols">
            <summary>
            获取固定行统计列重叠区域。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.RectStatRows">
            <summary>
            获取统计行区域。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.RectStatCols">
            <summary>
            获取统计列区域。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.RectStatColsStatRows">
            <summary>
            获取统计列统计行重叠区域。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.RectData">
            <summary>
            获取数据区域。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.LeftCol">
            <summary>
            获取或设置第一可滚动列索引。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.RightCol">
            <summary>
            获取最后一个可滚动列索引。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.TopRow">
            <summary>
            获取或设置第一可滚动行索引。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.BottunRow">
            <summary>
            获取最后一可滚动行索引。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.ScrollColsCount">
            <summary>
            获取网格可滚动列数。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.ScrollRowsCount">
            <summary>
            获取网格可滚动行数。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.BorderWidth">
            <summary>
            取得边框宽度
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.GridClientRectangle">
            <summary>
            获取网格客户区矩形。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.GridClientWidth">
            <summary>
            获取网格客户区宽度。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.GridClientHeight">
            <summary>
            获取网格客户区高度。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.LeftPosCol">
            <summary>
            最左列
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.TopPosCol">
            <summary>
            最上列
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.Height">
            <summary>
            取得和设置高度
            </summary>
        </member>
        <member name="P:Epoint.UI.GridBase.Width">
            <summary>
            取得和设置宽度
            </summary>
        </member>
        <member name="T:Epoint.UI.GridBase.GridPropertyChangedHandler">
            <summary>
            网格属性改变事件代理类
            </summary>
            <param name="sender">发送对象</param>
            <param name="PropertyName">属性名称</param>
            <param name="OldVal">旧值</param>
            <param name="NewVal">新值</param>
        </member>
        <member name="T:Epoint.UI.ICellEditor">
            <summary>
            模块名称：网格组件。
            版    本：1.0.0.0。
            内    容：输入子控件扩展接口。
            摘    要：用户可以将自定义控件加入网格控件中，实现该接口后控件同时支持CS和BS版本，
                      使用时只需将该控件放置与EpointForm.dll相同的目录即可，系统自动识别。
            文 件 名：ICellEditor.cs。
            编 写 人：周剑峰。
            编写日期：2009年2月1日。
            </summary>
        </member>
        <member name="M:Epoint.UI.ICellEditor.CreateChildControls(System.Web.UI.WebControls.WebControl,System.String)">
            <summary>
            创建添加子控件（在BS中使用）
            </summary>
            <param name="webGrid">webGrid对象</param>
            <param name="id">控件标识</param>
        </member>
        <member name="M:Epoint.UI.ICellEditor.OnPreRender(System.Web.UI.WebControls.WebControl,System.String)">
            <summary>
            绘制控件前事件（在BS中使用）
            </summary>
            <param name="webgrid">webGrid对象</param>
            <param name="id">控件标识</param>
        </member>
        <member name="M:Epoint.UI.ICellEditor.Render(System.Web.UI.WebControls.WebControl,System.Web.UI.HtmlTextWriter,System.String,System.String,System.String)">
            <summary>
            绘制控件（在BS中使用）
            </summary>
            <param name="webgrid">webGrid对象</param>
            <param name="output">网页输出流</param>
            <param name="id">控件标识</param>
            <param name="width">控件宽度(字符串己带单位px)</param>
            <param name="height">控件高度(字符串己带单位px)</param>
        </member>
        <member name="M:Epoint.UI.ICellEditor.RenderHtml(System.Web.UI.WebControls.WebControl,System.Web.UI.HtmlTextWriter,System.String,System.String,System.String)">
            <summary>
            绘制控件（在BS中使用）
            </summary>
            <param name="webgrid">webGrid对象</param>
            <param name="output">网页输出流</param>
            <param name="id">控件标识</param>
            <param name="width">控件宽度(字符串己带单位px)</param>
            <param name="height">控件高度(字符串己带单位px)</param>
        </member>
        <member name="M:Epoint.UI.ICellEditor.LoadData(System.String,System.String)">
            <summary>
            数据加载，将GridCell中的值，显示给控件中
            </summary>
            <param name="controlID">控件标识</param>
            <param name="value">回传值</param>
        </member>
        <member name="M:Epoint.UI.ICellEditor.DataSave">
            <summary>
            数据保存，将控件中的值，返回给GridCell
            </summary>
            <returns>返回是否保存成功</returns>
        </member>
        <member name="M:Epoint.UI.ICellEditor.RaisePostBackEvent(System.String)">
            <summary>
            引发回调事件
            </summary>
            <param name="eventArgument">事件参数</param>
        </member>
        <member name="M:Epoint.UI.ICellEditor.CtlSerial(System.Xml.XmlDocument)">
            <summary>
            控件配置信息的序列化
            </summary>
            <param name="xml">父级xml对象</param>
            <returns>保存了配置信息的xml结点</returns>
        </member>
        <member name="M:Epoint.UI.ICellEditor.CtlDeSerial(System.Xml.XmlDocument)">
            <summary>
            控件配置信息的反序列化
            </summary>
            <param name="root">父级xml对象</param>
        </member>
        <member name="M:Epoint.UI.ICellEditor.Clone(Epoint.UI.GridCell)">
            <summary>
            复制对象
            </summary>
            <param name="DestCell">目标对象</param>
        </member>
        <member name="M:Epoint.UI.ICellEditor.OnControlRemoved">
            <summary>
            控件移去事件
            </summary>
        </member>
        <member name="M:Epoint.UI.ICellEditor.ChangeID(System.String,System.String)">
            <summary>
            更改生成控件的ID
            </summary>
            <param name="OldID"></param>
            <param name="newID"></param>
        </member>
        <member name="P:Epoint.UI.ICellEditor.WidthScale">
            <summary>
            取得和设置控件宽度比例
            </summary>
        </member>
        <member name="P:Epoint.UI.ICellEditor.HostGridCell">
            <summary>
            取得和设置控件宿主单元对象，由系统自动设置
            </summary>
        </member>
        <member name="T:Epoint.UI.IDesigner">
            <summary>
            设计器
            </summary>
        </member>
        <member name="F:Epoint.UI.Grid.components">
            <summary>
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:Epoint.UI.Grid.Dispose(System.Boolean)">
            <summary>
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:Epoint.UI.Grid.InitializeComponent">
            <summary>
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="M:Epoint.UI.Grid.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="F:Epoint.UI.Grid.gridState">
            <summary>
            网格状态。
            </summary>
        </member>
        <member name="F:Epoint.UI.Grid.m_SelectedCells">
            <summary>
            先择的单元格
            </summary>
        </member>
        <member name="M:Epoint.UI.Grid.Reset">
            <summary>
            重置对象
            </summary>
        </member>
        <member name="M:Epoint.UI.Grid.Clone(Epoint.UI.GridCell)">
            <summary>
            复制对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.Grid.PasteToInput">
            <summary>
            复制到编辑框中
            </summary>
        </member>
        <member name="M:Epoint.UI.Grid.CtlSerial(System.Xml.XmlDocument)">
            <summary>
            序列化
            </summary>
            <param name="xml"></param>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.Grid.CompareWithParent(Epoint.UI.GridCell,System.String)">
            <summary>
            需要与网格属性比对的属生
            </summary>
            <param name="cell"></param>
            <param name="filedName"></param>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.Grid.SaveGrid(System.IO.Stream)">
            <summary>
            保存
            </summary>
        </member>
        <member name="M:Epoint.UI.Grid.CtlDeSerial(System.Xml.XmlDocument)">
            <summary>
            反序列化
            </summary>
            <param name="xml"></param>
        </member>
        <member name="M:Epoint.UI.Grid.ReCalcGrid">
            <summary>
            重新计算网格
            </summary>
        </member>
        <member name="M:Epoint.UI.Grid.LoadGrid(System.IO.Stream)">
            <summary>
            加载
            </summary>
        </member>
        <member name="M:Epoint.UI.Grid.SetSelectCell(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            设置选择的单元格
            </summary>
            <param name="row"></param>
            <param name="col"></param>
            <param name="toRow"></param>
            <param name="ToCol"></param>
        </member>
        <member name="M:Epoint.UI.Grid.SetCurCell(System.Int32,System.Int32)">
            <summary>
            设置当前单元。
            </summary>
        </member>
        <member name="M:Epoint.UI.Grid.InvokeSelectionChanged">
            <summary>
            引发选择改变事件
            </summary>
        </member>
        <member name="M:Epoint.UI.Grid.ClearSelections">
            <summary>
            清空网格选择区。
            </summary>
        </member>
        <member name="M:Epoint.UI.Grid.MoveFocus(Epoint.UI.Direction)">
            <summary>
            移动焦点框。
            </summary>
        </member>
        <member name="M:Epoint.UI.Grid.DrawGridCells(System.Drawing.Graphics)">
            <summary>
            绘制单元格
            </summary>
        </member>
        <member name="M:Epoint.UI.Grid.DrawSelectedEdge(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            绘制选择框
            </summary>
        </member>
        <member name="M:Epoint.UI.Grid.DrawGridCell(System.Drawing.Graphics,Epoint.UI.GridCell)">
            <summary>
            绘制单个单元格
            </summary>
        </member>
        <member name="M:Epoint.UI.Grid.AdjustHScrollBar">
            <summary>
            调整水平滚动条。
            </summary>
        </member>
        <member name="M:Epoint.UI.Grid.AdjustVScrollBar">
            <summary>
            调整垂直滚动条。
            </summary>
        </member>
        <member name="M:Epoint.UI.Grid.Grid_MouseClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            单元单击事件
            </summary>
        </member>
        <member name="M:Epoint.UI.Grid.Grid_MouseDoubleClick(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            单元双击事件
            </summary>
        </member>
        <member name="M:Epoint.UI.Grid.Grid_MouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            鼠标按下事件
            </summary>
        </member>
        <member name="M:Epoint.UI.Grid.Grid_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            鼠标移动事件
            </summary>
        </member>
        <member name="M:Epoint.UI.Grid.Grid_MouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            鼠标弹起事件
            </summary>
        </member>
        <member name="M:Epoint.UI.Grid.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>
            重载处理命令键方法。
            </summary>
        </member>
        <member name="M:Epoint.UI.Grid.OnResize(System.EventArgs)">
            <summary>
            控件大小改变
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Epoint.UI.Grid.printDoc_BeginPrint(System.Object,System.Drawing.Printing.PrintEventArgs)">
            <summary>
            准备打印事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Epoint.UI.Grid.GetColIndexFromPoint(System.Int32,System.Int32,System.Int32@)">
            <summary>
            获取指定坐标所在列的索引。
            lefto指返回当前光标位置与这列左线差距
            </summary>
        </member>
        <member name="M:Epoint.UI.Grid.GetRowIndexFromPoint(System.Int32,System.Int32,System.Int32@)">
            <summary>
            获取指定坐标所在行的索引。
            topto 指返回当前光标位置与这行顶线差距
            </summary>
        </member>
        <member name="M:Epoint.UI.Grid.GetCellActiveValue(Epoint.UI.GridCell,System.Object)">
            <summary>
            计算单元实际值
            </summary>
            <param name="cell"></param>
            <param name="cellValue"></param>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.Grid.SetCellActiveValue(Epoint.UI.GridCell,System.Object,System.Object)">
            <summary>
            设置单元实际值
            </summary>
            <param name="cell"></param>
            <param name="cellValue"></param>
            <param name="newValue"></param>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.Grid.SelectAll">
            <summary>
            全选单元格
            </summary>
        </member>
        <member name="F:Epoint.UI.Grid.m_hostGridCell">
            <summary>
            宿主单元格
            </summary>
        </member>
        <member name="M:Epoint.UI.Grid.WndProc(System.Windows.Forms.Message@)">
            <summary>
            处理按钮消息
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:Epoint.UI.Grid.Epoint#UI#ICellEditor#OnControlRemoved">
            <summary>
            控件移去事件
            </summary>
        </member>
        <member name="M:Epoint.UI.Grid.Render(System.Web.UI.WebControls.WebControl,System.Web.UI.HtmlTextWriter,System.String,System.String,System.String)">
            <summary>
            输入控件内容
            </summary>
            <param name="webgrid">WebGrid对象</param>
            <param name="output">网页输出流</param>
            <param name="id">控件标识</param>
            <param name="width">控件宽度</param>
            <param name="height">控件高度</param>
        </member>
        <member name="M:Epoint.UI.Grid.Epoint#UI#ICellEditor#RenderHtml(System.Web.UI.WebControls.WebControl,System.Web.UI.HtmlTextWriter,System.String,System.String,System.String)">
            <summary>
            输入Html控件
            </summary>
            <param name="webgrid"></param>
            <param name="output"></param>
            <param name="id"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="P:Epoint.UI.Grid.IsOnEdit">
            <summary>
            是否在编辑
            </summary>
        </member>
        <member name="E:Epoint.UI.Grid.SelectionChanged">
            <summary>
            当前单元格改变事件。
            </summary>
        </member>
        <member name="P:Epoint.UI.Grid.AllowHeaderSizing">
            <summary>
            允许标题栏改变宽高
            </summary>
        </member>
        <member name="P:Epoint.UI.Grid.AllowSizing">
            <summary>
            允许改变宽高
            </summary>
        </member>
        <member name="P:Epoint.UI.Grid.LockAllSize">
            <summary>
            锁定总大小
            </summary>
        </member>
        <member name="P:Epoint.UI.Grid.BorderCollapse">
            <summary>
            取得和设置上下边线是否合并
            </summary>
        </member>
        <member name="P:Epoint.UI.Grid.ShowSelected">
            <summary>
            取得和设置显示选择单元
            </summary>
        </member>
        <member name="P:Epoint.UI.Grid.IsInDesign">
            <summary>
            取得和设置是否在设置状态
            </summary>
        </member>
        <member name="P:Epoint.UI.Grid.RunInBSsystem">
            <summary>
            取得和设置是否在BS中运行
            </summary>
        </member>
        <member name="P:Epoint.UI.Grid.CssClass">
            <summary>
            取得和设置BS中的样式
            </summary>
        </member>
        <member name="P:Epoint.UI.Grid.ControlIDMap">
            <summary>
            取得控件ID与单元格的映射表
            </summary>
        </member>
        <member name="P:Epoint.UI.Grid.ParentEpointForm">
            <summary>
            取得父表单
            </summary>
        </member>
        <member name="P:Epoint.UI.Grid.CurCol">
            <summary>
            获取网格当前列索引。
            </summary>
        </member>
        <member name="P:Epoint.UI.Grid.CurRow">
            <summary>
            获取网格当前行索引。
            </summary>
        </member>
        <member name="P:Epoint.UI.Grid.CurCell">
            <summary>
            获取网网格当前单元。
            </summary>
        </member>
        <member name="P:Epoint.UI.Grid.SelectedCells">
            <summary>
            设置或取得当前所选的单元格
            </summary>
        </member>
        <member name="E:Epoint.UI.Grid.KeyUp">
            <summary>
            按键事件
            </summary>
        </member>
        <member name="T:Epoint.UI.Controls.Button">
            <summary>
            模块名称：网格组件—按钮控件。
            版    本：1.0.0.0。
            内    容：数据网格。
            摘    要：嵌与网格中的按钮控件，支持BS和CS版本。
                      在网络编辑状态时，点鼠标中健来选中该控件
            文 件 名：Button.cs。
            编 写 人：周剑峰。
            编写日期：2008年12月1日。
            </summary>
        </member>
        <member name="M:Epoint.UI.Controls.Button.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Epoint.UI.Controls.Button.OnGotFocus(System.EventArgs)">
            <summary>
            获取焦点
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Epoint.UI.Controls.Button.WndProc(System.Windows.Forms.Message@)">
            <summary>
            处理消息
            </summary>
            <param name="m">传入的消息</param>
        </member>
        <member name="M:Epoint.UI.Controls.Button.Epoint#UI#ICellEditor#ChangeID(System.String,System.String)">
            <summary>
            更改生成控件的ID
            </summary>
            <param name="OldID"></param>
            <param name="newID"></param>
        </member>
        <member name="M:Epoint.UI.Controls.Button.Epoint#UI#ICellEditor#CreateChildControls(System.Web.UI.WebControls.WebControl,System.String)">
            <summary>
            创建子控件
            </summary>
            <param name="webgrid">WebGrid对象</param>
            <param name="id">控件标识</param>
        </member>
        <member name="M:Epoint.UI.Controls.Button.Epoint#UI#ICellEditor#OnControlRemoved">
            <summary>
            控件移去事件
            </summary>
        </member>
        <member name="M:Epoint.UI.Controls.Button.Epoint#UI#ICellEditor#OnPreRender(System.Web.UI.WebControls.WebControl,System.String)">
            <summary>
            绘制控件前事件（在BS中使用）
            </summary>
            <param name="webgrid">webGrid对象</param>
            <param name="id">控件标识</param>
        </member>
        <member name="M:Epoint.UI.Controls.Button.Epoint#UI#ICellEditor#Render(System.Web.UI.WebControls.WebControl,System.Web.UI.HtmlTextWriter,System.String,System.String,System.String)">
            <summary>
            输入控件内容
            </summary>
            <param name="webGrid">WebGrid对象</param>
            <param name="output">网页输出流</param>
            <param name="id">控件标识</param>
            <param name="width">控件宽度</param>
            <param name="height">控件高度</param>
        </member>
        <member name="M:Epoint.UI.Controls.Button.Epoint#UI#ICellEditor#CtlSerial(System.Xml.XmlDocument)">
            <summary>
            对象序列化
            </summary>
            <param name="xml">XML对象</param>
            <returns>XML结点</returns>
        </member>
        <member name="M:Epoint.UI.Controls.Button.Epoint#UI#ICellEditor#CtlDeSerial(System.Xml.XmlDocument)">
            <summary>
            对象反序列化
            </summary>
            <param name="root">XML结点</param>
        </member>
        <member name="M:Epoint.UI.Controls.Button.Epoint#UI#ICellEditor#LoadData(System.String,System.String)">
            <summary>
            加载数据
            </summary>
            <param name="controlID">控件ID(BS中用)</param>
            <param name="value">值</param>
        </member>
        <member name="M:Epoint.UI.Controls.Button.Epoint#UI#ICellEditor#DataSave">
            <summary>
            保存数据到单元格中
            </summary>
            <returns>是否可以保存</returns>
        </member>
        <member name="M:Epoint.UI.Controls.Button.Epoint#UI#ICellEditor#RaisePostBackEvent(System.String)">
            <summary>
            传处客户端事件
            </summary>
            <param name="eventArgument">事件名称</param>
        </member>
        <member name="M:Epoint.UI.Controls.Button.Clone">
            <summary>
            复制对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.Controls.Button.Clone(Epoint.UI.GridCell)">
            <summary>
            复制对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.Controls.Button.RenderHtml(System.Web.UI.WebControls.WebControl,System.Web.UI.HtmlTextWriter,System.String,System.String,System.String)">
            <summary>
            生成Html页
            </summary>
            <param name="webgrid"></param>
            <param name="output"></param>
            <param name="id"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="P:Epoint.UI.Controls.Button.CssClass">
            <summary>
            css样式
            </summary>
        </member>
        <member name="P:Epoint.UI.Controls.Button.WidthScale">
            <summary>
            取得和设置宽度比例
            </summary>
        </member>
        <member name="P:Epoint.UI.Controls.Button.OnClientClick">
            <summary>
            取得和设置客户端点击事件
            </summary>
        </member>
        <member name="P:Epoint.UI.Controls.Button.Events">
            <summary>
            设置控件事件
            </summary>
        </member>
        <member name="P:Epoint.UI.Controls.Button.Attributes">
            <summary>
            设置控件属性
            </summary>
        </member>
        <member name="P:Epoint.UI.Controls.Button.HostGridCell">
            <summary>
            取得和设置宿住单元格
            </summary>
        </member>
        <member name="T:Epoint.UI.CLsObjectSafety">
            <summary>
            CLsObjectSafety 的摘要说明。
            </summary>
        </member>
        <member name="F:Epoint.UI.CLsObjectSafety.INTERFACESAFE_FOR_UNTRUSTED_CALLER">
            <summary>
            
            </summary>
        </member>
        <member name="F:Epoint.UI.CLsObjectSafety.INTERFACESAFE_FOR_UNTRUSTED_DATA">
            <summary>
            
            </summary>
        </member>
        <member name="T:YYZZ.Interpreter.BasicInterpreter">
            <summary>
            版 本 号：脚本解释器 V1.0
            模 块 名：BasicInterpreter
            功    能：类basic语言脚本解释器
            文 件 名：BasicInterpreter.cs。
            编 写 人：周剑峰
            编写日期：2005年8月3日
            修 改 人：
            修改日期：
            </summary>
        </member>
        <member name="M:YYZZ.Interpreter.BasicInterpreter.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:YYZZ.Interpreter.BasicInterpreter.#ctor(System.String)">
            <summary>
            构造函数2
            str为输入的脚本程序
            </summary>
        </member>
        <member name="M:YYZZ.Interpreter.BasicInterpreter.Reset">
            <summary>
            初使化解释器
            </summary>
        </member>
        <member name="M:YYZZ.Interpreter.BasicInterpreter.Run">
            <summary>
            运行
            </summary>
        </member>
        <member name="M:YYZZ.Interpreter.BasicInterpreter.Step">
            <summary>
            步进
            </summary>
        </member>
        <member name="M:YYZZ.Interpreter.BasicInterpreter.serror(System.Int32)">
            <summary>
            产生错误信息
            </summary>
        </member>
        <member name="M:YYZZ.Interpreter.BasicInterpreter.get_token">
            <summary>
            取得标记
            结果保存于：
            tokenVal :记号或读取的值	token
            token_type :记号类型		token_type
            token :记号标识				tok
            </summary>
        </member>
        <member name="M:YYZZ.Interpreter.BasicInterpreter.look_up(System.String)">
            <summary>
            查找字符串s是否是关键字，若是则返回token，反之返回NULL
            </summary>
        </member>
        <member name="M:YYZZ.Interpreter.BasicInterpreter.putback">
            <summary>
            回退一个标识
            </summary>
        </member>
        <member name="M:YYZZ.Interpreter.BasicInterpreter.assignment">
            <summary>
             计算变量的值，并保存
            </summary>
        </member>
        <member name="M:YYZZ.Interpreter.BasicInterpreter.get_exp(System.Object@)">
            <summary>
            数值计算的入口函数
            </summary>
        </member>
        <member name="M:YYZZ.Interpreter.BasicInterpreter.level05(System.Object@)">
            <summary>
            进行逻辑运算
            </summary>
        </member>
        <member name="M:YYZZ.Interpreter.BasicInterpreter.level1(System.Object@)">
            <summary>
            进行关系运算
            </summary>
        </member>
        <member name="M:YYZZ.Interpreter.BasicInterpreter.level2(System.Object@)">
            <summary>
            加减值计算
            </summary>
        </member>
        <member name="M:YYZZ.Interpreter.BasicInterpreter.level3(System.Object@)">
            <summary>
            乘除求模计算
            </summary>
        </member>
        <member name="M:YYZZ.Interpreter.BasicInterpreter.level4(System.Object@)">
            <summary>
            乘幂计算
            </summary>
        </member>
        <member name="M:YYZZ.Interpreter.BasicInterpreter.level5(System.Object@)">
            <summary>
            符号反转
            </summary>
        </member>
        <member name="M:YYZZ.Interpreter.BasicInterpreter.level6(System.Object@)">
            <summary>
            计算带括号的部份及直接赋值
            </summary>
        </member>
        <member name="M:YYZZ.Interpreter.BasicInterpreter.level7(System.Object@)">
            <summary>
            调用函数???????????????????
            </summary>
        </member>
        <member name="M:YYZZ.Interpreter.BasicInterpreter.primitive(System.Object@)">
            <summary>
             跟据数字或己有变量求值
            </summary>
        </member>
        <member name="M:YYZZ.Interpreter.BasicInterpreter.arith(System.Char,System.Object@,System.Object@)">
            <summary>
            跟据计算符号计算值
            op为计算符号
            </summary>
        </member>
        <member name="M:YYZZ.Interpreter.BasicInterpreter.unary(System.Char,System.Object@)">
            <summary>
            反转符号
            </summary>
        </member>
        <member name="M:YYZZ.Interpreter.BasicInterpreter.find_var(System.String)">
            <summary>
             查找变量的值
            </summary>
        </member>
        <member name="M:YYZZ.Interpreter.BasicInterpreter.find_eol">
            <summary>
            移至程序下一行
            </summary>
        </member>
        <member name="M:YYZZ.Interpreter.BasicInterpreter.exec_print">
            <summary>
            执行print指令
            </summary>
        </member>
        <member name="M:YYZZ.Interpreter.BasicInterpreter.exec_if">
            <summary>
            执行if语句
            </summary>
        </member>
        <member name="M:YYZZ.Interpreter.BasicInterpreter.exec_elseif">
            <summary>
            执行elseif语句
            </summary>
        </member>
        <member name="M:YYZZ.Interpreter.BasicInterpreter.exec_else">
            <summary>
            执行else语句
            </summary>
        </member>
        <member name="M:YYZZ.Interpreter.BasicInterpreter.exec_endif">
            <summary>
            执行endif语句
            </summary>
        </member>
        <member name="M:YYZZ.Interpreter.BasicInterpreter.exec_for">
            <summary>
            执行for语句
            </summary>
        </member>
        <member name="M:YYZZ.Interpreter.BasicInterpreter.exec_next">
            <summary>
            执行next语句
            </summary>
        </member>
        <member name="M:YYZZ.Interpreter.BasicInterpreter.exec_while">
            <summary>
            执行while语句
            </summary>
        </member>
        <member name="M:YYZZ.Interpreter.BasicInterpreter.exec_endwhile">
            <summary>
            执行endwhile语句
            </summary>
        </member>
        <member name="P:YYZZ.Interpreter.BasicInterpreter.StrProg">
            <summary>
            取得和设置脚本程序
            </summary>
        </member>
        <member name="P:YYZZ.Interpreter.BasicInterpreter.OutPut">
            <summary>
            取得输出结果
            </summary>
        </member>
        <member name="P:YYZZ.Interpreter.BasicInterpreter.ErrOutPut">
            <summary>
            取得错误信息结果
            </summary>
        </member>
        <member name="P:YYZZ.Interpreter.BasicInterpreter.Variables">
            <summary>
            取得变量集合
            </summary>
        </member>
        <member name="P:YYZZ.Interpreter.BasicInterpreter.CurPos">
            <summary>
            取得和设置程序当前所运行到的位置
            </summary>
        </member>
        <member name="P:YYZZ.Interpreter.BasicInterpreter.IsPorgStarted">
            <summary>
            取得程序是否己启动
            </summary>
        </member>
        <member name="P:YYZZ.Interpreter.BasicInterpreter.IsProgEnded">
            <summary>
            取得程序是否己结束
            </summary>
        </member>
        <member name="P:YYZZ.Interpreter.BasicInterpreter.IsAutoReset">
            <summary>
            取得和设置是否自动复位
            </summary>
        </member>
        <member name="T:Epoint.UI.DBGrid">
            <summary>
            模块名称：网格组件。
            版    本：1.0.0.0。
            内    容：数据网格。
            摘    要：实现数据的绑定，行的数据扩展显示。
            文 件 名：DBGrid.cs。
            编 写 人：周剑峰。
            编写日期：2008年12月1日。
            </summary>
        </member>
        <member name="F:Epoint.UI.DBGrid.components">
            <summary>
            必需的设计器变量。
            </summary>
        </member>
        <member name="M:Epoint.UI.DBGrid.Dispose(System.Boolean)">
            <summary>
            清理所有正在使用的资源。
            </summary>
            <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
        </member>
        <member name="M:Epoint.UI.DBGrid.InitializeComponent">
            <summary>
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
        </member>
        <member name="M:Epoint.UI.DBGrid.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Epoint.UI.DBGrid.DBGrid_DragEnter(System.Object,System.Windows.Forms.DragEventArgs)">
            <summary>
            网格拖放
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Epoint.UI.DBGrid.DBGrid_DragDrop(System.Object,System.Windows.Forms.DragEventArgs)">
            <summary>
            网格拖放
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Epoint.UI.DBGrid.GetDataSource(System.String)">
            <summary>
            取得数据源实体
            </summary>
            <param name="DataMember">数据源名</param>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.DBGrid.GetDataSourceObj(System.String)">
            <summary>
            取得对象实体
            </summary>
            <param name="DataMember"></param>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.DBGrid.GetFieldFullPath(System.Int32,System.Int32,System.String)">
            <summary>
            取得字段全路径
            </summary>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.DBGrid.GetFieldValue(System.Int32,System.Int32,System.String)">
            <summary>
            取得字段值
            </summary>
        </member>
        <member name="M:Epoint.UI.DBGrid.SetFieldValue(System.Int32,System.Int32,System.String,System.Object)">
            <summary>
            设置字段值
            </summary>
            <param name="row">行</param>
            <param name="col">列</param>
            <param name="Field">字段</param>
            <param name="value">值</param>
        </member>
        <member name="M:Epoint.UI.DBGrid.OnDataConnectionChanged">
            <summary>
            执行数据绑定
            </summary>
        </member>
        <member name="M:Epoint.UI.DBGrid.SaveGrid(System.IO.Stream)">
            <summary>
            保存数据
            </summary>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.DBGrid.LoadGrid(System.IO.Stream)">
            <summary>
            加载数据
            </summary>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.DBGrid.DataRowAdd(System.Int32)">
            <summary>
            刷新第row的数据绑定
            </summary>
        </member>
        <member name="M:Epoint.UI.DBGrid.DataOnlyOneRowAdd(Epoint.UI.GridRow)">
            <summary>
            刷新第row的数据绑定
            </summary>
        </member>
        <member name="M:Epoint.UI.DBGrid.DataRowDelete(System.Int32,System.Int32)">
            <summary>
            刷新第row的数据绑定
            </summary>
        </member>
        <member name="M:Epoint.UI.DBGrid.DataRowChange(System.Int32)">
            <summary>
            刷新第row的数据绑定
            </summary>
        </member>
        <member name="M:Epoint.UI.DBGrid.DataColChange(System.Int32)">
            <summary>
            刷新第col列的数据绑定
            </summary>
        </member>
        <member name="M:Epoint.UI.DBGrid.GetRowManageBase(Epoint.UI.GridRow)">
            <summary>
            取得行的绑定对象
            </summary>
        </member>
        <member name="M:Epoint.UI.DBGrid.GetColManageBase(Epoint.UI.GridCol)">
            <summary>
            取得列的绑定对象
            </summary>
        </member>
        <member name="M:Epoint.UI.DBGrid.GetCellActiveValue(Epoint.UI.GridCell,System.Object)">
            <summary>
            计算单元实际值（本层主要计算绑定值）
            </summary>
            <param name="cell">单元对象</param>
            <param name="cellValue">单元格</param>
            <returns>计算后的值</returns>
        </member>
        <member name="M:Epoint.UI.DBGrid.SetCellActiveValue(Epoint.UI.GridCell,System.Object,System.Object)">
            <summary>
            设置单元实际值（本层主要设置绑定值）
            </summary>
            <param name="cell">单元对象</param>
            <param name="cellValue">单元值</param>
            <param name="newValue">输入的新值</param>
            <returns>实际要设置的值</returns>
        </member>
        <member name="P:Epoint.UI.DBGrid.DataSource">
            <summary>
            绑定数据源
            </summary>
        </member>
        <member name="P:Epoint.UI.DBGrid.DataMember">
            <summary>
            取得和设置数据对象
            </summary>
        </member>
        <member name="P:Epoint.UI.DBGrid.IsLoadedData">
            <summary>
            取得和设置是否已加载了数据
            </summary>
        </member>
        <member name="E:Epoint.UI.DBGrid.dataSourceChange">
            <summary>
            数据源改变事件
            </summary>
        </member>
        <member name="T:Epoint.UI.ControlEvent">
            <summary>
            控件事件管理类
            </summary>
        </member>
        <member name="M:Epoint.UI.ControlEvent.#ctor(Epoint.UI.DBGrid)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Epoint.UI.ControlEvent.GetDataSource">
            <summary>
            取得数据源对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.ControlEvent.GetDataSource(Epoint.UI.Sheet)">
            <summary>
            取得数据源对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.ControlEvent.AddDefaultParams">
            <summary>
            添加默认参数列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.ControlEvent.InvokeMethod(System.Object,System.EventArgs)">
            <summary>
            执行方法
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Epoint.UI.ControlEvent.GetMethods(System.Object)">
            <summary>
            取得方法的对象列表
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.ControlEvent.InvokeMethod(System.Object,System.String,System.Object[])">
            <summary>
            调用函数
            </summary>
            <param name="obj"></param>
            <param name="MethodName"></param>
            <param name="param"></param>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.ControlEvent.GetMethod(System.Object,System.String)">
            <summary>
            取得函数名
            </summary>
            <param name="obj"></param>
            <param name="MethodName"></param>
            <returns></returns>
        </member>
        <member name="P:Epoint.UI.ControlEvent.EventName">
            <summary>
            取得和设置事件名称
            </summary>
        </member>
        <member name="P:Epoint.UI.ControlEvent.CallMethod">
            <summary>
            取得和设置调用源的方法路径
            </summary>
        </member>
        <member name="P:Epoint.UI.ControlEvent.DataMember">
            <summary>
            取得和设置数据源名
            </summary>
        </member>
        <member name="P:Epoint.UI.ControlEvent.MethodName">
            <summary>
            取得和设置方法名
            </summary>
        </member>
        <member name="P:Epoint.UI.ControlEvent.Params">
            <summary>
            取得参数列表
            </summary>
        </member>
        <member name="P:Epoint.UI.ControlEvent.Index">
            <summary>
            取得和设置索引
            </summary>
        </member>
        <member name="T:Epoint.UI.ControlEventsCollections">
            <summary>
            控件事件管理类集合
            </summary>
        </member>
        <member name="M:Epoint.UI.ControlEventsCollections.#ctor(Epoint.UI.ICellEditor)">
            <summary>
            构造函数
            </summary>
            <param name="editor">控件体</param>
        </member>
        <member name="M:Epoint.UI.ControlEventsCollections.Add(System.String,System.String,System.String)">
            <summary>
            添加
            </summary>
            <param name="EventName"></param>
            <param name="DataMember"></param>
            <param name="MethodName"></param>
        </member>
        <member name="M:Epoint.UI.ControlEventsCollections.GetBindTable">
            <summary>
            取得绑定表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.ControlEventsCollections.GetByEventsName(System.String)">
            <summary>
            取得事件对象见<see cref="T:Epoint.UI.ControlEvent"/>
            </summary>
            <param name="eventName">事件名</param>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.ControlEventsCollections.CtlSerial(System.Xml.XmlDocument,System.Xml.XmlElement)">
            <summary>
            将集合对象序列化
            </summary>
            <param name="xml"></param>
            <param name="root"></param>
        </member>
        <member name="M:Epoint.UI.ControlEventsCollections.CtlDeSerial(System.Xml.XmlNodeList)">
            <summary>
            反序列化到集合对象
            </summary>
            <param name="ChildNodes"></param>
        </member>
        <member name="M:Epoint.UI.ControlEventsCollections.GetEventsList">
            <summary>
            取得支付的事件列表
            </summary>
            <returns>事件列表</returns>
        </member>
        <member name="M:Epoint.UI.ControlEventsCollections.AddWebEventMap(System.String,System.String)">
            <summary>
            添加Web事件名称的映射
            </summary>
            <param name="eventName">事件名</param>
            <param name="webEventName">Web事件名</param>
        </member>
        <member name="M:Epoint.UI.ControlEventsCollections.GetWebEventName(System.String)">
            <summary>
            根据CS事件名取得Web事件名
            </summary>
            <param name="eventName">事件名</param>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.ControlEventsCollections.GetCSEventName(System.String)">
            <summary>
            根据Web事件名取得CS中的事件名
            </summary>
            <param name="webEventName"></param>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.ControlEventsCollections.AddToControl(System.Web.UI.WebControls.WebControl,System.Web.UI.HtmlControls.HtmlControl)">
            <summary>
            将事件添加到控件上
            </summary>
            <param name="baseControl"></param>
            <param name="control"></param>
        </member>
        <member name="M:Epoint.UI.ControlEventsCollections.InvokeMethod(System.Object,System.EventArgs,System.String)">
            <summary>
            调用事件
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
            <param name="EventName"></param>
        </member>
        <member name="T:YYZZ.Interpreter.CSharpInterpreter">
            <summary>
            版 本 号：脚本解释器 V1.0
            模 块 名：CSharpInterpreter
            功    能：C#语言脚本解释器。
            文 件 名：CSharpInterpreter.cs。
            编 写 人：周剑峰
            编写日期：2006年1月19日
            修 改 人：
            修改日期：
            </summary>
        </member>
        <member name="M:YYZZ.Interpreter.CSharpInterpreter.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:YYZZ.Interpreter.CSharpInterpreter.Compare">
            <summary>
            编译,返回是否通过
            </summary>
        </member>
        <member name="M:YYZZ.Interpreter.CSharpInterpreter.GetAssembly">
            <summary>
            取得程序集
            </summary>
        </member>
        <member name="P:YYZZ.Interpreter.CSharpInterpreter.StrProg">
            <summary>
            取得和设置脚本程序
            </summary>
        </member>
        <member name="P:YYZZ.Interpreter.CSharpInterpreter.ErrOutPut">
            <summary>
            取得错误信息结果
            </summary>
        </member>
        <member name="T:Epoint.UI.GridCols">
            <summary>
            模块名称：网格组件。
            版    本：1.0.0.0。
            内    容：网格基类。
            摘    要：网格列对象集合，处理列的增、删。
            文 件 名：GridCols.cs。
            编 写 人：张雷。
            编写日期：2006年01月26日。
            修 改 人：周剑峰。
            修改日期：2008年08月25日。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridCols.#ctor(Epoint.UI.GridBase)">
            <summary>
            构造函数。
            </summary>
            <param name="grid">宿主网格</param>
        </member>
        <member name="M:Epoint.UI.GridCols.IndexOf(Epoint.UI.GridCol)">
            <summary>
            返回指定列在列集合中的位置。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridCols.AdjustColsCount(System.Int32)">
            <summary>
            调整列数。
            </summary>
            <param name="count">指定网格列数</param>
        </member>
        <member name="M:Epoint.UI.GridCols.AddGridCol">
            <summary>
            追加一列。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridCols.InsertGridCol(System.Int32)">
            <summary>
            插入一列。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridCols.InsertGridCol(System.Int32,System.Int32)">
            <summary>
            插入N行。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridCols.RemoveGridCol(System.Int32)">
            <summary>
            删除一列。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridCols.Clone">
            <summary>
            复制对象
            </summary>
            <returns></returns>
        </member>
        <member name="P:Epoint.UI.GridCols.Grid">
            <summary>
            获取宿主网格。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCols.Item(System.Int32)">
            <summary>
            根据索引获取或设置指定网格单元。
            </summary>
        </member>
        <member name="T:Epoint.UI.GridCell">
            <summary>
            模块名称：网格组件。
            版    本：1.0.0.0。
            内    容：网格基类。
            摘    要：网络单元类，记录单元格的相关属性。包括子控件。
                        提供，单元格复制，数据值获取，值转换方法。
            文 件 名：GridCell.cs。
            编 写 人：张雷。
            编写日期：2006年01月26日。
            修 改 人：周剑峰。
            修改日期：2008年08月25日。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridCell.#ctor(Epoint.UI.GridBase,System.Int32,System.Int32)">
            <summary>
            构造函数。
            </summary>
            <param name="grid">宿主网格</param>
            <param name="row">行</param>
            <param name="col">列</param>
        </member>
        <member name="M:Epoint.UI.GridCell.NotifyChange``1(``0@,``0)">
            <summary>
            属性变动
            </summary>
        </member>
        <member name="M:Epoint.UI.GridCell.ReDraw">
            <summary>
            刷新重绘单元格
            </summary>
        </member>
        <member name="M:Epoint.UI.GridCell.Reset">
            <summary>
            重置单元格。
            说明：将单元格所有属性恢复为默认值。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridCell.CopyStyleTo(Epoint.UI.GridCell)">
            <summary>
            将当前单元的设置复制到目标单元。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridCell.CopyTo(Epoint.UI.GridCell)">
            <summary>
            将当前单元的设置复制到目标单元。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridCell.Clone">
            <summary>
            克隆单元格对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.GridCell.Clone(Epoint.UI.Grid)">
            <summary>    
            克隆单元格对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.GridCell.RememberMe">
            <summary>
            保存本单元格至内存
            </summary>
        </member>
        <member name="M:Epoint.UI.GridCell.SelectMe">
            <summary>
            选择本单元格
            </summary>
        </member>
        <member name="M:Epoint.UI.GridCell.ToString">
            <summary>
            返回对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.GridCell.SetspanCell(System.Boolean,Epoint.UI.GridCell)">
            <summary>
            设置被覆盖的单元格
            </summary>
        </member>
        <member name="M:Epoint.UI.GridCell.ResetCtlPos(System.Boolean)">
            <summary>
            初使化输入控件位置
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCell.Grid">
            <summary>
            获取宿主网格。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCell.Colspan">
            <summary>
            列合并
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCell.Rowspan">
            <summary>
            行合并
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCell.CoveredCell">
            <summary>
            取得被覆盖住的单元对象
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCell.IsCovered">
            <summary>
            获取单元是否被覆盖
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCell.Col">
            <summary>
            获取单元列索引。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCell.Row">
            <summary>
            获取单元行索引。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCell.Left">
            <summary>
            获取单元左坐标。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCell.Top">
            <summary>
            获取单元顶坐标。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCell.Right">
            <summary>
            获取单元右坐标。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCell.Bottom">
            <summary>
            获取单元底坐标。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCell.Location">
            <summary>
            获取单元起点坐标。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCell.Rect">
            <summary>
            获取单元区域。
            说明：该属性反映单元的实际大小，其坐标与单元实际坐标并不一致。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCell.WidthScale">
            <summary>
            取得宽度比例
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCell.ID">
            <summary>
            取得和设置控件自定义标识
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCell.ShowValue">
            <summary>
            取得显示值
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCell.ActuralValue">
            <summary>
            实际值（主要是计算后的）
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCell.CellValue">
            <summary>
            获取或设置单元值。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCell.ExtendValue">
            <summary>
            获取或设置单元扩展值。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCell.DateType">
            <summary>
            获取或设置单元数据类型。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCell.DateTypeFormat">
            <summary>
            获取或设置单元数据类型转换参数
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCell.ReadOnly">
            <summary>
            获取或设置单元的只读性。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCell.Tag">
            <summary>
            获取或设置用户自定义数据。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCell.BorderStyle">
            <summary>
            获取或设置单元边框风格。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCell.TextFormat">
            <summary>
            获取或设置单元文本格式。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCell.BackColor">
            <summary>
            获取或设置单元背景色。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCell.Font">
            <summary>
            获取或设置单元字体。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCell.ForeColor">
            <summary>
            获取或设置单元前景色。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCell.BackGroundImage">
            <summary>
            获取或设置单元背景图
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCell.ImagePath">
            <summary>
            取得图片地址
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCell.CssClass">
            <summary>
            取得和设置BS中的样式
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCell.CombineAfterInsert">
            <summary>
            获取或设置插入行或列后是否合并单元格
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCell.Padding">
            <summary>
            取得和设置单元格内空边距
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCell.CanSelect">
            <summary>
            获取或设置单元的可选性。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCell.InputControl">
            <summary>
            取得和设置输入控件
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCell.IsWebCtlCreated">
            <summary>
            取得和设置Web控件是否已经执行CreateChildControls
            </summary>
        </member>
        <member name="T:Epoint.UI.GridException">
            <summary>
            网格处理异常
            </summary>
        </member>
        <member name="M:Epoint.UI.GridException.#ctor(System.String,System.Exception)">
            <summary>
            构造函数
            </summary>
            <param name="message">异常信息</param>
            <param name="InnerExcept">内部异常</param>
        </member>
        <member name="M:Epoint.UI.GridException.#ctor(System.String)">
            <summary>
            构造函数
            </summary>
            <param name="message">异常信息</param>
        </member>
        <member name="T:Epoint.UI.PrintPaperInfo">
            <summary>
            打印纸张信息
            </summary>
        </member>
        <member name="M:Epoint.UI.PrintPaperInfo.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="F:Epoint.UI.PrintPaperInfo.AllPapers">
            <summary>
            常用纸张枚举
            </summary>
        </member>
        <member name="M:Epoint.UI.PrintPaperInfo.ResetFormPrintDoc(System.Drawing.Printing.PrintDocument)">
            <summary>
            重置打印文档对象
            </summary>
            <param name="PrintDoc"></param>
        </member>
        <member name="M:Epoint.UI.PrintPaperInfo.ObjToString">
            <summary>
            对象转字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.PrintPaperInfo.StringToObj(System.String)">
            <summary>
            字符串转对象
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="P:Epoint.UI.PrintPaperInfo.PrintPaperName">
            <summary>
            取得和设置纸张类型
            </summary>
        </member>
        <member name="P:Epoint.UI.PrintPaperInfo.PrintPaperSize">
            <summary>
            取得打印纸张
            </summary>
        </member>
        <member name="P:Epoint.UI.PrintPaperInfo.TopMargin">
            <summary>
            取得和设置打印顶边距
            </summary>
        </member>
        <member name="P:Epoint.UI.PrintPaperInfo.LeftMargin">
            <summary>
            取得和设置打印左边距
            </summary>
        </member>
        <member name="P:Epoint.UI.PrintPaperInfo.RightMargin">
            <summary>
            取得和设置打印右边距
            </summary>
        </member>
        <member name="P:Epoint.UI.PrintPaperInfo.BottomMargin">
            <summary>
            取得和设置打印下边距
            </summary>
        </member>
        <member name="P:Epoint.UI.PrintPaperInfo.Landscape">
            <summary>
            获取或设置一个值，该值指示是横向还是纵向打印该页。
            </summary>
        </member>
        <member name="P:Epoint.UI.PrintPaperInfo.PrintPageWidth">
            <summary>
            取得打印页宽度
            </summary>
        </member>
        <member name="P:Epoint.UI.PrintPaperInfo.PrintPageHeight">
            <summary>
            取得打印页高度
            </summary>
        </member>
        <member name="P:Epoint.UI.PrintPaperInfo.PrintDoc">
            <summary>
            打印管理对象
            </summary>
        </member>
        <member name="T:Epoint.UI.LineStyle">
            <summary>
            模块名称：绘图类库。
            版    本：1.0.0.1。
            内    容：线条风格类。
            摘    要：主要包括线条的颜色和虚线样式。
            文 件 名：LineStyle.cs。
            编 写 人：张雷。
            编写日期：2006年01月26日。
            修 改 人：张雷。
            修改日期：2006年01月26日。
            </summary>
        </member>
        <member name="M:Epoint.UI.LineStyle.#ctor(Epoint.UI.CellBorderStyle)">
            <summary>
            构造函数。
            </summary>
            <param name="border">边框样式</param>
        </member>
        <member name="M:Epoint.UI.LineStyle.#ctor(Epoint.UI.CellBorderStyle,System.Drawing.Color,Epoint.UI.LineDashStyle)">
            <summary>
            构造函数
            </summary>
            <param name="border">边框样式</param>
            <param name="color">边框颜色</param>
            <param name="style">边框样式</param>
        </member>
        <member name="M:Epoint.UI.LineStyle.CopyNewObj(Epoint.UI.LineStyle)">
            <summary>
            复制并创建新对象
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:Epoint.UI.LineStyle.GetLineWidth(Epoint.UI.LineDashStyle)">
            <summary>
            获取指定虚线样式线条的宽度。
            </summary>
            <param name="dashStyle">虚线样式</param>
        </member>
        <member name="M:Epoint.UI.LineStyle.Equals(Epoint.UI.LineStyle)">
            <summary>
            判断指定线条风格对象是否与自身相同。
            </summary>
        </member>
        <member name="M:Epoint.UI.LineStyle.FormString(System.String)">
            <summary>
            从字符串中初始化对象
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.LineStyle.ToString">
            <summary>
            转字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.LineStyle.Draw(System.Drawing.Graphics,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            绘制线条。
            </summary>
        </member>
        <member name="M:Epoint.UI.LineStyle.Clone">
            <summary>
            克隆线条风格。
            </summary>
        </member>
        <member name="M:Epoint.UI.LineStyle.Clone(Epoint.UI.CellBorderStyle)">
            <summary>
            克隆线条风格。
            </summary>
        </member>
        <member name="P:Epoint.UI.LineStyle.Color">
            <summary>
            获取或设置线条颜色。
            </summary>
        </member>
        <member name="P:Epoint.UI.LineStyle.DashStyle">
            <summary>
            获取或设置虚线样式。
            </summary>
        </member>
        <member name="P:Epoint.UI.LineStyle.Width">
            <summary>
            获取线条宽度。
            说明：线条宽度由虚线样式决定。
            </summary>
        </member>
        <member name="T:YYZZ.Interpreter.Token_Type">
            <summary>
            记号类型枚举
            </summary>
        </member>
        <member name="T:YYZZ.Interpreter.Token">
            <summary>
            记号枚举
            </summary>
        </member>
        <member name="T:YYZZ.Interpreter.Commands">
            <summary>
            关键字记录集合
            </summary>
        </member>
        <member name="T:YYZZ.Interpreter.variable">
            <summary>
            变量
            </summary>
        </member>
        <member name="M:YYZZ.Interpreter.variable.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:YYZZ.Interpreter.variable.#ctor(System.String,System.Object)">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:YYZZ.Interpreter.variable.Name">
            <summary>
            取得变量名
            </summary>
        </member>
        <member name="P:YYZZ.Interpreter.variable.Val">
            <summary>
            取得和设置变量值
            </summary>
        </member>
        <member name="P:YYZZ.Interpreter.variable.Type">
            <summary>
            取得和设置变量类型
            </summary>
        </member>
        <member name="T:YYZZ.Interpreter.Variables">
            <summary>
            变量集合
            </summary>
        </member>
        <member name="M:YYZZ.Interpreter.Variables.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:YYZZ.Interpreter.Variables.Add(YYZZ.Interpreter.variable)">
            <summary>
            添加网格单元
            </summary>
        </member>
        <member name="M:YYZZ.Interpreter.Variables.Remove(System.String)">
            <summary>
            删除网格单元
            </summary>
        </member>
        <member name="P:YYZZ.Interpreter.Variables.Item(System.String)">
            <summary>
            变量索引。
            </summary>
        </member>
        <member name="T:Epoint.UI.GridCells">
            <summary>
            模块名称：网格组件。
            版    本：1.0.0.0。
            内    容：单元集合。
            摘    要：网络单元对象集合。
                        采用一个二维数组保存所有单元对象。当某个单元格对象所有属性都为默认值时，
                        不保存单元对象实体，在二维数组中存一个null。在获取时，返回一个新单元格。
            文 件 名：GridBase.cs。
            编 写 人：张雷。
            编写日期：2006年01月26日。
            修 改 人：周剑峰。
            修改日期：2008年08月25日。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridCells.#ctor(Epoint.UI.GridBase)">
            <summary>
            构造函数。
            </summary>
            <param name="grid">宿主网格</param>
        </member>
        <member name="M:Epoint.UI.GridCells.RememberMe(Epoint.UI.GridCell,System.Int32,System.Int32)">
            <summary>
            记录单元对象
            </summary>
        </member>
        <member name="M:Epoint.UI.GridCells.ForgetMe(Epoint.UI.GridCell,System.Int32,System.Int32)">
            <summary>
            忘记单元对象
            </summary>
        </member>
        <member name="M:Epoint.UI.GridCells.AdjustRowsCount(System.Int32)">
            <summary>
            调整行数。
            </summary>
            <param name="count">指定网格行数</param>
        </member>
        <member name="M:Epoint.UI.GridCells.InsertGridRow(System.Int32)">
            <summary>
            插入一行。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridCells.RemoveGridRow(System.Int32)">
            <summary>
            删除一行。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridCells.AdjustColsCount(System.Int32)">
            <summary>
            调整列数。
            </summary>
            <param name="count">指定网格行数</param>
        </member>
        <member name="M:Epoint.UI.GridCells.InsertGridCol(System.Int32)">
            <summary>
            插入一列
            </summary>
        </member>
        <member name="M:Epoint.UI.GridCells.RemoveGridCol(System.Int32)">
            <summary>
            删除一列。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridCells.Clone">
            <summary>
            复制对象
            </summary>
            <returns></returns>
        </member>
        <member name="P:Epoint.UI.GridCells.Grid">
            <summary>
            获取宿主网格。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCells.Item(System.Int32,System.Int32)">
            <summary>
            根据索引获取或设置指定网格单元。
            </summary>
        </member>
        <member name="T:Epoint.UI.GridLines">
            <summary>
            网格分割线风格。
            </summary>
        </member>
        <member name="F:Epoint.UI.GridLines.None">
            <summary>
            不显示分割线。
            </summary>
        </member>
        <member name="F:Epoint.UI.GridLines.Vertical">
            <summary>
            显示垂直分割线。
            </summary>
        </member>
        <member name="F:Epoint.UI.GridLines.Horizontal">
            <summary>
            显示水平分割线。
            </summary>
        </member>
        <member name="F:Epoint.UI.GridLines.All">
            <summary>
            显示水平和垂直分割线。
            </summary>
        </member>
        <member name="T:Epoint.UI.FocusStyle">
            <summary>
            焦点框风格。
            </summary>
        </member>
        <member name="F:Epoint.UI.FocusStyle.Solid">
            <summary>
            实线焦点框（宽度为2）。
            </summary>
        </member>
        <member name="F:Epoint.UI.FocusStyle.Dashed">
            <summary>
            虚线焦点框（宽度为1）。
            </summary>
        </member>
        <member name="T:Epoint.UI.Direction">
            <summary>
            移动方向。
            </summary>
        </member>
        <member name="F:Epoint.UI.Direction.Up">
            <summary>
            向上。
            </summary>
        </member>
        <member name="F:Epoint.UI.Direction.Down">
            <summary>
            向下。
            </summary>
        </member>
        <member name="F:Epoint.UI.Direction.Left">
            <summary>
            向左。
            </summary>
        </member>
        <member name="F:Epoint.UI.Direction.Right">
            <summary>
            向右。
            </summary>
        </member>
        <member name="T:Epoint.UI.GridStates">
            <summary>
            网格状态。
            </summary>
        </member>
        <member name="F:Epoint.UI.GridStates.Normal">
            <summary>
            正常状态。
            </summary>
        </member>
        <member name="F:Epoint.UI.GridStates.ColSizing">
            <summary>
            列调状态（鼠标拖动调整列宽）。
            </summary>
        </member>
        <member name="F:Epoint.UI.GridStates.RowSizing">
            <summary>
            行调状态（鼠标拖动调整行高）。
            </summary>
        </member>
        <member name="F:Epoint.UI.GridStates.Editing">
            <summary>
            编辑状态（当前所选单元格）。
            </summary>
        </member>
        <member name="T:Epoint.UI.GridSections">
            <summary>
            网格区域。
            </summary>
        </member>
        <member name="F:Epoint.UI.GridSections.None">
            <summary>
            不位于网格区域。
            </summary>
        </member>
        <member name="F:Epoint.UI.GridSections.FixedColsFixedRows">
            <summary>
            固定列固定行重叠区域。
            </summary>
        </member>
        <member name="F:Epoint.UI.GridSections.FixedCols">
            <summary>
            固定列区域。
            </summary>
        </member>
        <member name="F:Epoint.UI.GridSections.FixedRows">
            <summary>
            固定行区域。
            </summary>
        </member>
        <member name="F:Epoint.UI.GridSections.StatColsStatRows">
            <summary>
            统计列统计行重叠区域。
            </summary>
        </member>
        <member name="F:Epoint.UI.GridSections.StatCols">
            <summary>
            统计列区域。
            </summary>
        </member>
        <member name="F:Epoint.UI.GridSections.StatRows">
            <summary>
            统计行区域。
            </summary>
        </member>
        <member name="F:Epoint.UI.GridSections.FixedColsStatRows">
            <summary>
            固定列统计行重叠区域。
            </summary>
        </member>
        <member name="F:Epoint.UI.GridSections.FixedRowsStatCols">
            <summary>
            固定行统计列重叠区域。
            </summary>
        </member>
        <member name="F:Epoint.UI.GridSections.Data">
            <summary>
            数据区域。
            </summary>
        </member>
        <member name="T:Epoint.UI.BorderLines">
            <summary>
            边框线样式。
            </summary>
        </member>
        <member name="F:Epoint.UI.BorderLines.None">
            <summary>
            无边框线。
            </summary>
        </member>
        <member name="F:Epoint.UI.BorderLines.LeftLine">
            <summary>
            左边框线。
            </summary>
        </member>
        <member name="F:Epoint.UI.BorderLines.TopLine">
            <summary>
            顶边框线。
            </summary>
        </member>
        <member name="F:Epoint.UI.BorderLines.RightLine">
            <summary>
            右边框线。
            </summary>
        </member>
        <member name="F:Epoint.UI.BorderLines.BottomLine">
            <summary>
            底边框线。
            </summary>
        </member>
        <member name="F:Epoint.UI.BorderLines.ForwardDiagonal">
            <summary>
            正向对角线（从左上到右下）。
            </summary>
        </member>
        <member name="F:Epoint.UI.BorderLines.BackwardDiagonal">
            <summary>
            反向对角线（从右上到左下）。
            </summary>
        </member>
        <member name="F:Epoint.UI.BorderLines.Around">
            <summary>
            上下左右四条边框线。
            </summary>
        </member>
        <member name="F:Epoint.UI.BorderLines.DiagonalCross">
            <summary>
            正向对角线和反向对角线。
            </summary>
        </member>
        <member name="F:Epoint.UI.BorderLines.All">
            <summary>
            所有边框线。
            </summary>
        </member>
        <member name="T:Epoint.UI.TableHeaderStyle">
            <summary>
            斜线表头样式。
            </summary>
        </member>
        <member name="F:Epoint.UI.TableHeaderStyle.None">
            <summary>
            无。（不绘制任何斜线和标题）
            </summary>
        </member>
        <member name="F:Epoint.UI.TableHeaderStyle.Style1">
            <summary>
            样式一：行标题一 + 列标题一。
            </summary>
        </member>
        <member name="F:Epoint.UI.TableHeaderStyle.Style2">
            <summary>
            样式二：行标题一 + 数据标题 + 列标题一。
            </summary>
        </member>
        <member name="F:Epoint.UI.TableHeaderStyle.Style3">
            <summary>
            样式三：行标题一 + 行标题二 + 列标题一。
            </summary>
        </member>
        <member name="F:Epoint.UI.TableHeaderStyle.Style4">
            <summary>
            样式四：行标题 + 列标题一 + 列标题二。
            </summary>
        </member>
        <member name="F:Epoint.UI.TableHeaderStyle.Style5">
            <summary>
            样式五：行标题一 + 行标题二 + 列标题一 + 列标题二。
            </summary>
        </member>
        <member name="T:Epoint.UI.LineAlignment">
            <summary>
            线条对齐方式。
            </summary>
        </member>
        <member name="F:Epoint.UI.LineAlignment.Left">
            <summary>
            居左对齐。
            </summary>
        </member>
        <member name="F:Epoint.UI.LineAlignment.Center">
            <summary>
            居中对齐。
            </summary>
        </member>
        <member name="F:Epoint.UI.LineAlignment.Right">
            <summary>
            居右对齐。
            </summary>
        </member>
        <member name="T:Epoint.UI.LineDashStyle">
            <summary>
            虚线样式。
            </summary>
        </member>
        <member name="F:Epoint.UI.LineDashStyle.None">
            <summary>
            不绘制任何直线。
            </summary>
        </member>
        <member name="F:Epoint.UI.LineDashStyle.Dash">
            <summary>
            指定由划线段组成的直线。
            </summary>
        </member>
        <member name="F:Epoint.UI.LineDashStyle.Dot">
            <summary>
            指定由点构成的直线。
            </summary>
        </member>
        <member name="F:Epoint.UI.LineDashStyle.Solid1">
            <summary>
            指定实线（宽度为1个像素）。
            </summary>
        </member>
        <member name="F:Epoint.UI.LineDashStyle.Solid2">
            <summary>
            指定实线（宽度为2个像素）。
            </summary>
        </member>
        <member name="F:Epoint.UI.LineDashStyle.Solid3">
            <summary>
            指定实线（宽度为3个像素）。
            </summary>
        </member>
        <member name="F:Epoint.UI.LineDashStyle.DoubleDash">
            <summary>
            指定由双虚线构成的直线。
            </summary>
        </member>
        <member name="F:Epoint.UI.LineDashStyle.DoubleSolid">
            <summary>
            指定由双实线构成的直线。
            </summary>
        </member>
        <member name="T:Epoint.UI.DataExpandType">
            <summary>
            数据扩展类型
            </summary>
        </member>
        <member name="F:Epoint.UI.DataExpandType.Insert">
            <summary>
            插入新行
            </summary>
        </member>
        <member name="F:Epoint.UI.DataExpandType.Covered">
            <summary>
            覆盖旧数据
            </summary>
        </member>
        <member name="F:Epoint.UI.DataExpandType.WordExpand">
            <summary>
            字扩展，超过后纵向扩展多行
            </summary>
        </member>
        <member name="F:Epoint.UI.DataExpandType.ReleatedCell">
            <summary>
            关联单元格值进行绑定
            </summary>
        </member>
        <member name="T:Epoint.UI.CellEventArgs">
            <summary>
            单元事件参数。
            </summary>
        </member>
        <member name="M:Epoint.UI.CellEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            构造函数。
            </summary>
            <param name="col">单元列索引</param>
            <param name="row">单元行索引</param>
        </member>
        <member name="M:Epoint.UI.CellEventArgs.#ctor(System.Int32,System.Int32,System.Object)">
            <summary>
            构造函数。
            </summary>
            <param name="col">单元列索引</param>
            <param name="row">单元行索引</param>
            <param name="cellValue">单元值</param>
        </member>
        <member name="P:Epoint.UI.CellEventArgs.Col">
            <summary>
            获取单元列索引。
            </summary>
        </member>
        <member name="P:Epoint.UI.CellEventArgs.Row">
            <summary>
            获取单元行索引。
            </summary>
        </member>
        <member name="P:Epoint.UI.CellEventArgs.CellValue">
            <summary>
            获取单元值。
            </summary>
        </member>
        <member name="T:Epoint.UI.CellEventHandler">
            <summary>
            单元事件委托。
            </summary>
        </member>
        <member name="T:Epoint.UI.Controls.TextBox">
            <summary>
            模块名称：网格组件—输入框控件。
            版    本：1.0.0.0。
            内    容：数据网格。
            摘    要：嵌与网格中的输入框控件，支持BS和CS版本。
            文 件 名：TextBox.cs。
            编 写 人：周剑峰。
            编写日期：2008年12月1日。
            </summary>
        </member>
        <member name="M:Epoint.UI.Controls.TextBox.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Epoint.UI.Controls.TextBox.OnGotFocus(System.EventArgs)">
            <summary>
            获得焦点事件
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Epoint.UI.Controls.TextBox.WndProc(System.Windows.Forms.Message@)">
            <summary>
            处理消息
            </summary>
            <param name="m">传入的消息</param>
        </member>
        <member name="M:Epoint.UI.Controls.TextBox.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>
            处理输入健
            </summary>
            <param name="msg">windows消息</param>
            <param name="keyData">健值</param>
            <returns>返回是需下级处理</returns>
        </member>
        <member name="M:Epoint.UI.Controls.TextBox.TextBox_Leave(System.Object,System.EventArgs)">
            <summary>
            焦点离开事件
            </summary>
        </member>
        <member name="M:Epoint.UI.Controls.TextBox.Epoint#UI#ICellEditor#OnControlRemoved">
            <summary>
            控件移去事件
            </summary>
        </member>
        <member name="M:Epoint.UI.Controls.TextBox.Epoint#UI#ICellEditor#ChangeID(System.String,System.String)">
            <summary>
            更改生成控件的ID
            </summary>
            <param name="OldID"></param>
            <param name="newID"></param>
        </member>
        <member name="M:Epoint.UI.Controls.TextBox.Epoint#UI#ICellEditor#CreateChildControls(System.Web.UI.WebControls.WebControl,System.String)">
            <summary>
            创建子控件
            </summary>
            <param name="webgrid">WebGrid对象</param>
            <param name="id">控件标识</param>
        </member>
        <member name="M:Epoint.UI.Controls.TextBox.Epoint#UI#ICellEditor#OnPreRender(System.Web.UI.WebControls.WebControl,System.String)">
            <summary>
            绘制控件前事件（在BS中使用）
            </summary>
            <param name="webgrid">webGrid对象</param>
            <param name="id">控件标识</param>
        </member>
        <member name="M:Epoint.UI.Controls.TextBox.Epoint#UI#ICellEditor#Render(System.Web.UI.WebControls.WebControl,System.Web.UI.HtmlTextWriter,System.String,System.String,System.String)">
            <summary>
            输入控件内容
            </summary>
            <param name="webGrid">WebGrid对象</param>
            <param name="output">网页输出流</param>
            <param name="id">控件标识</param>
            <param name="width">控件宽度</param>
            <param name="height">控件高度</param>
        </member>
        <member name="M:Epoint.UI.Controls.TextBox.Check">
            <summary>
            校验数据CS
            </summary>
            <returns>返回是否通过</returns>
        </member>
        <member name="M:Epoint.UI.Controls.TextBox.GetValidRegex(System.String@)">
            <summary>
            取得校验正则表达式
            </summary>
            <param name="error">返回出错提示</param>
            <returns>正则表达式</returns>
        </member>
        <member name="M:Epoint.UI.Controls.TextBox.Epoint#UI#ICellEditor#CtlSerial(System.Xml.XmlDocument)">
            <summary>
            对象序列化
            </summary>
            <param name="xml">XML对象</param>
            <returns>XML结点</returns>
        </member>
        <member name="M:Epoint.UI.Controls.TextBox.Epoint#UI#ICellEditor#CtlDeSerial(System.Xml.XmlDocument)">
            <summary>
            对象反序列化
            </summary>
            <param name="root">XML结点</param>
        </member>
        <member name="M:Epoint.UI.Controls.TextBox.Epoint#UI#ICellEditor#LoadData(System.String,System.String)">
            <summary>
            加载数据
            </summary>
            <param name="controlID">控件ID(BS中用)</param>
            <param name="value">值</param>
        </member>
        <member name="M:Epoint.UI.Controls.TextBox.Epoint#UI#ICellEditor#DataSave">
            <summary>
            保存数据到单元格中
            </summary>
            <returns>是否可以保存</returns>
        </member>
        <member name="M:Epoint.UI.Controls.TextBox.Epoint#UI#ICellEditor#RaisePostBackEvent(System.String)">
            <summary>
            传处客户端事件
            </summary>
            <param name="eventArgument">事件名称</param>
        </member>
        <member name="M:Epoint.UI.Controls.TextBox.RenderHtml(System.Web.UI.WebControls.WebControl,System.Web.UI.HtmlTextWriter,System.String,System.String,System.String)">
            <summary>
            生成Html
            </summary>
            <param name="webgrid"></param>
            <param name="output"></param>
            <param name="id"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:Epoint.UI.Controls.TextBox.Clone">
            <summary>
            复制对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.Controls.TextBox.Clone(Epoint.UI.GridCell)">
            <summary>
            复制对象
            </summary>
            <returns></returns>
        </member>
        <member name="P:Epoint.UI.Controls.TextBox.CssClass">
            <summary>
            css样式
            </summary>
        </member>
        <member name="P:Epoint.UI.Controls.TextBox.Attributes">
            <summary>
            设置控件属性
            </summary>
        </member>
        <member name="P:Epoint.UI.Controls.TextBox.BorderColor">
            <summary>
            获取或设置单元背景色。
            </summary>
        </member>
        <member name="P:Epoint.UI.Controls.TextBox.ShowBorder">
            <summary>
            获取或设置是否显示边框
            </summary>
        </member>
        <member name="P:Epoint.UI.Controls.TextBox.AllowEmpty">
            <summary>
            获取或设置是否可以为空
            </summary>
        </member>
        <member name="P:Epoint.UI.Controls.TextBox.DefaultValue">
            <summary>
            获取或设置默认值，当AllowEmpty为false时用
            </summary>
        </member>
        <member name="P:Epoint.UI.Controls.TextBox.ValidType">
            <summary>
            获取或设置输入数据验证类型
            </summary>
        </member>
        <member name="P:Epoint.UI.Controls.TextBox.ValidError">
            <summary>
            获取或设置自定义验证错误信息
            </summary>
        </member>
        <member name="P:Epoint.UI.Controls.TextBox.ReqValidError">
            <summary>
            获取或设置自定义验证错误信息
            </summary>
        </member>
        <member name="P:Epoint.UI.Controls.TextBox.ValidExpressionCustom">
            <summary>
            获取或设置自定义用于验证的正则表达式或函数名，ValidType 为 Custom 时有效
            </summary>
        </member>
        <member name="P:Epoint.UI.Controls.TextBox.BackColor">
            <summary>
            获取或设置控件的背景色
            </summary>
        </member>
        <member name="P:Epoint.UI.Controls.TextBox.MaxLength">
            <summary>
            获取或设置用户可在文本框控件中键入或粘贴的最大字符数
            </summary>
        </member>
        <member name="P:Epoint.UI.Controls.TextBox.Multiline">
            <summary>
            获取或设置是否支持多行文本
            </summary>
        </member>
        <member name="P:Epoint.UI.Controls.TextBox.WidthScale">
            <summary>
            取得和设置宽度比例
            </summary>
        </member>
        <member name="P:Epoint.UI.Controls.TextBox.JsCheckFunction">
            <summary>
            取得和设置js校验方法
            </summary>
        </member>
        <member name="P:Epoint.UI.Controls.TextBox.JsValidError">
            <summary>
            获取或设置js验证错误信息
            </summary>
        </member>
        <member name="P:Epoint.UI.Controls.TextBox.ShowNotNullTag">
            <summary>
            获取或设置显示非空标记
            </summary>
        </member>
        <member name="P:Epoint.UI.Controls.TextBox.HostGridCell">
            <summary>
            取得和设置宿住网格单元格
            </summary>
        </member>
        <member name="T:Epoint.UI.Controls.TextBox.DataType">
            <summary>
            验证数据类型
            </summary>
        </member>
        <member name="F:Epoint.UI.Controls.TextBox.DataType.不验证">
            <summary>
            不验证
            </summary>
        </member>
        <member name="F:Epoint.UI.Controls.TextBox.DataType.字符串">
            <summary>
            字符串
            </summary>
        </member>
        <member name="F:Epoint.UI.Controls.TextBox.DataType.整数">
            <summary>
            整数
            </summary>
        </member>
        <member name="F:Epoint.UI.Controls.TextBox.DataType.正整数">
            <summary>
            大于0的整数
            </summary>
        </member>
        <member name="F:Epoint.UI.Controls.TextBox.DataType.浮点数">
            <summary>
            数字
            </summary>
        </member>
        <member name="F:Epoint.UI.Controls.TextBox.DataType.网址">
            <summary>
            网址
            </summary>
        </member>
        <member name="F:Epoint.UI.Controls.TextBox.DataType.邮件地址">
            <summary>
            邮件地址
            </summary>
        </member>
        <member name="F:Epoint.UI.Controls.TextBox.DataType.汉字">
            <summary>
            汉字
            </summary>
        </member>
        <member name="F:Epoint.UI.Controls.TextBox.DataType.英文">
            <summary>
            英文
            </summary>
        </member>
        <member name="F:Epoint.UI.Controls.TextBox.DataType.ASCII码">
            <summary>
            ASCII码
            </summary>
        </member>
        <member name="F:Epoint.UI.Controls.TextBox.DataType.电话号码">
            <summary>
            电话号码
            </summary>
        </member>
        <member name="F:Epoint.UI.Controls.TextBox.DataType.手机号码">
            <summary>
            手机号码
            </summary>
        </member>
        <member name="F:Epoint.UI.Controls.TextBox.DataType.邮政编码">
            <summary>
            邮政编码
            </summary>
        </member>
        <member name="F:Epoint.UI.Controls.TextBox.DataType.日期">
            <summary>
            日期
            </summary>
        </member>
        <member name="F:Epoint.UI.Controls.TextBox.DataType.时间">
            <summary>
            时间
            </summary>
        </member>
        <member name="F:Epoint.UI.Controls.TextBox.DataType.日期时间">
            <summary>
            日期时间
            </summary>
        </member>
        <member name="F:Epoint.UI.Controls.TextBox.DataType.自定义">
            <summary>
            自定义正则表达式
            </summary>
        </member>
        <member name="T:Epoint.UI.GridCol">
            <summary>
            模块名称：网格组件。
            版    本：1.0.0.0。
            内    容：网格基类。
            摘    要：网格列对象，记录列对象的一些属性。
            文 件 名：GridCol.cs。
            编 写 人：张雷。
            编写日期：2006年01月26日。
            修 改 人：周剑峰。
            修改日期：2008年08月25日。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridCol.#ctor(Epoint.UI.GridBase)">
            <summary>
            构造函数。
            </summary>
            <param name="grid">宿主网格</param>
        </member>
        <member name="M:Epoint.UI.GridCol.Reset">
            <summary>
            重置单元格。
            说明：将单元格所有属性恢复为默认值。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridCol.CopyTo(Epoint.UI.GridCol)">
            <summary>
            将当前列的设置复制到目标列。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridCol.NotifyChange``1(``0@,``0)">
            <summary>
            属性变动
            </summary>
        </member>
        <member name="M:Epoint.UI.GridCol.ToString">
            <summary>
            取得对象名称
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCol.Grid">
            <summary>
            获取宿主网格。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCol.Item(System.Int32)">
            <summary>
            根据指定索引获取或设置网该列的指定单元。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCol.Col">
            <summary>
            获取列索引。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCol.Width">
            <summary>
            获取或设置网格列宽度。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCol.WidthScale">
            <summary>
            取得和设置宽度比例
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCol.Left">
            <summary>
            获取网格列左坐标。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCol.Right">
            <summary>
            获取网格列右坐标。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCol.CellValue">
            <summary>
            获取或设置该列默认单元值。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCol.ExtendValue">
            <summary>
            获取或设置该列默认扩展值。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCol.DataType">
            <summary>
            获取或设置数据类型。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCol.Tag">
            <summary>
            获取或设置用户自定义数据。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCol.BackColor">
            <summary>
            获取或设置背景色。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCol.Font">
            <summary>
            获取或设置字体。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCol.ForeColor">
            <summary>
            获取或设置前景色。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCol.Visible">
            <summary>
            获取或设置可见性。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCol.HideInViewPage">
            <summary>
            取得和设置是否在只读页中隐藏
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCol.ReadOnly">
            <summary>
            获取或设置只读性。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCol.CanSelect">
            <summary>
            获取或设置可选性。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCol.DataMember">
            <summary>
            取得和设置数据对象
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCol.DataCompoment">
            <summary>
            取得该行的绑定对象
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCol.ExpandType">
            <summary>
            取得和设置数据扩展方式
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCol.ExpandSapnCol">
            <summary>
            取得和设置扩展包含下包方包含几行
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCol.ExpandIndex">
            <summary>
            取得和设置扩展行索引
            </summary>
        </member>
        <member name="P:Epoint.UI.GridCol.DataIndex">
            <summary>
            取得和设置数据行（记录绑定数据指定的数据行）
            </summary>
        </member>
        <member name="T:Epoint.UI.Controls.DateTimePicker">
            <summary>
            模块名称：网格组件—按钮控件。
            版    本：1.0.0.0。
            内    容：数据网格。
            摘    要：嵌与网格中的时间选择控件，支持BS和CS版本。
                      在网络编辑状态时，点鼠标中健来选中该控件
            文 件 名：DateTimePicker.cs。
            编 写 人：周剑峰。
            编写日期：2008年12月1日。
            </summary>
        </member>
        <member name="M:Epoint.UI.Controls.DateTimePicker.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Epoint.UI.Controls.DateTimePicker.WndProc(System.Windows.Forms.Message@)">
            <summary>
            处理消息
            </summary>
            <param name="m">传入的消息</param>
        </member>
        <member name="M:Epoint.UI.Controls.DateTimePicker.Epoint#UI#ICellEditor#ChangeID(System.String,System.String)">
            <summary>
            更改生成控件的ID
            </summary>
            <param name="OldID"></param>
            <param name="newID"></param>
        </member>
        <member name="M:Epoint.UI.Controls.DateTimePicker.Epoint#UI#ICellEditor#OnControlRemoved">
            <summary>
            控件移去事件
            </summary>
        </member>
        <member name="M:Epoint.UI.Controls.DateTimePicker.Epoint#UI#ICellEditor#CreateChildControls(System.Web.UI.WebControls.WebControl,System.String)">
            <summary>
            创建子控件
            </summary>
            <param name="webgrid">WebGrid对象</param>
            <param name="id">控件标识</param>
        </member>
        <member name="M:Epoint.UI.Controls.DateTimePicker.Epoint#UI#ICellEditor#OnPreRender(System.Web.UI.WebControls.WebControl,System.String)">
            <summary>
            绘制控件前事件（在BS中使用）
            </summary>
            <param name="webgrid">webGrid对象</param>
            <param name="id">控件标识</param>
        </member>
        <member name="M:Epoint.UI.Controls.DateTimePicker.Epoint#UI#ICellEditor#Render(System.Web.UI.WebControls.WebControl,System.Web.UI.HtmlTextWriter,System.String,System.String,System.String)">
            <summary>
            输入控件内容
            </summary>
            <param name="webGrid">WebGrid对象</param>
            <param name="output">网页输出流</param>
            <param name="id">控件标识</param>
            <param name="width">控件宽度</param>
            <param name="height">控件高度</param>
        </member>
        <member name="M:Epoint.UI.Controls.DateTimePicker.Check">
            <summary>
            校验数据CS
            </summary>
            <returns>返回是否通过</returns>
        </member>
        <member name="M:Epoint.UI.Controls.DateTimePicker.Epoint#UI#ICellEditor#CtlSerial(System.Xml.XmlDocument)">
            <summary>
            对象序列化
            </summary>
            <param name="xml">XML对象</param>
            <returns>XML结点</returns>
        </member>
        <member name="M:Epoint.UI.Controls.DateTimePicker.Epoint#UI#ICellEditor#CtlDeSerial(System.Xml.XmlDocument)">
            <summary>
            对象反序列化
            </summary>
            <param name="root">XML结点</param>
        </member>
        <member name="M:Epoint.UI.Controls.DateTimePicker.Epoint#UI#ICellEditor#LoadData(System.String,System.String)">
            <summary>
            加载数据
            </summary>
            <param name="controlID">控件ID(BS中用)</param>
            <param name="value">值</param>
        </member>
        <member name="M:Epoint.UI.Controls.DateTimePicker.Epoint#UI#ICellEditor#DataSave">
            <summary>
            保存数据到单元格中
            </summary>
            <returns>是否可以保存</returns>
        </member>
        <member name="M:Epoint.UI.Controls.DateTimePicker.Epoint#UI#ICellEditor#RaisePostBackEvent(System.String)">
            <summary>
            传处客户端事件
            </summary>
            <param name="eventArgument">事件名称</param>
        </member>
        <member name="M:Epoint.UI.Controls.DateTimePicker.Clone">
            <summary>
            复制对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.Controls.DateTimePicker.Clone(Epoint.UI.GridCell)">
            <summary>
            复制对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.Controls.DateTimePicker.RenderHtml(System.Web.UI.WebControls.WebControl,System.Web.UI.HtmlTextWriter,System.String,System.String,System.String)">
            <summary>
            生成Html页面
            </summary>
            <param name="webgrid"></param>
            <param name="output"></param>
            <param name="id"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="P:Epoint.UI.Controls.DateTimePicker.BorderColor">
            <summary>
            获取或设置单元背景色。
            </summary>
        </member>
        <member name="P:Epoint.UI.Controls.DateTimePicker.AllowEmpty">
            <summary>
            获取或设置是否可以为空
            </summary>
        </member>
        <member name="P:Epoint.UI.Controls.DateTimePicker.ValidError">
            <summary>
            获取或设置自定义验证错误信息
            </summary>
        </member>
        <member name="P:Epoint.UI.Controls.DateTimePicker.BackColor">
            <summary>
            获取或设置控件的背景色
            </summary>
        </member>
        <member name="P:Epoint.UI.Controls.DateTimePicker.WidthScale">
            <summary>
            取得和设置宽度比例
            </summary>
        </member>
        <member name="P:Epoint.UI.Controls.DateTimePicker.ShowNotNullTag">
            <summary>
            获取或设置显示非空标记
            </summary>
        </member>
        <member name="P:Epoint.UI.Controls.DateTimePicker.CanEdit">
            <summary>
            取得和设置是否可输入
            </summary>
        </member>
        <member name="P:Epoint.UI.Controls.DateTimePicker.HostGridCell">
            <summary>
            取得和设置宿住网格单元格
            </summary>
        </member>
        <member name="T:Epoint.UI.GridRows">
            <summary>
            模块名称：网格组件。
            版    本：1.0.0.0。
            内    容：网格基类。
            摘    要：网格行对象集合，处理行的增、删。
            文 件 名：GridRows.cs。
            编 写 人：张雷。
            编写日期：2006年01月26日。
            修 改 人：周剑峰。
            修改日期：2008年08月25日。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridRows.#ctor(Epoint.UI.GridBase)">
            <summary>
            构造函数。
            </summary>
            <param name="grid">宿主网格</param>
        </member>
        <member name="M:Epoint.UI.GridRows.IndexOf(Epoint.UI.GridRow)">
            <summary>
            返回指定行在行集合中的位置。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridRows.AdjustRowsCount(System.Int32)">
            <summary>
            调整行数。
            </summary>
            <param name="count">指定网格行数</param>
        </member>
        <member name="M:Epoint.UI.GridRows.AddGridRow">
            <summary>
            追加一行。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridRows.InsertGridRow(System.Int32)">
            <summary>
            插入一行。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridRows.InsertGridRow(System.Int32,System.Int32)">
            <summary>
            插入N行。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridRows.RemoveGridRow(System.Int32)">
            <summary>
            删除一行。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridRows.Clone">
            <summary>
            复制对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.GridRows.Clone(Epoint.UI.GridBase)">
            <summary>
            复制对象
            </summary>
            <returns></returns>
        </member>
        <member name="P:Epoint.UI.GridRows.Grid">
            <summary>
            获取宿主网格。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridRows.Item(System.Int32)">
            <summary>
            根据索引获取定网格行对象。
            </summary>
        </member>
        <member name="T:Epoint.UI.Controls.HtmlDisplay">
            <summary>
            模块名称：网格组件—Html显示控件。
            版    本：1.0.0.0。
            内    容：Web控件。
            摘    要：Html显示控件
            文 件 名：HtmlTemp.cs。
            编 写 人：周剑峰。
            编写日期：2009年10月16日。
            </summary>
        </member>
        <member name="M:Epoint.UI.Controls.HtmlDisplay.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Epoint.UI.Controls.HtmlDisplay.WndProc(System.Windows.Forms.Message@)">
            <summary>
            处理消息
            </summary>
            <param name="m">传入的消息</param>
        </member>
        <member name="M:Epoint.UI.Controls.HtmlDisplay.Epoint#UI#ICellEditor#OnControlRemoved">
            <summary>
            控件移去事件
            </summary>
        </member>
        <member name="M:Epoint.UI.Controls.HtmlDisplay.CreateChildControls(System.Web.UI.WebControls.WebControl,System.String)">
            <summary>
            创建子控件
            </summary>
            <param name="webGrid">WebGrid对象</param>
            <param name="id">控件标识</param>
        </member>
        <member name="M:Epoint.UI.Controls.HtmlDisplay.OnPreRender(System.Web.UI.WebControls.WebControl,System.String)">
            <summary>
            绘制控件前事件（在BS中使用）
            </summary>
            <param name="webgrid">webGrid对象</param>
            <param name="id">控件标识</param>
        </member>
        <member name="M:Epoint.UI.Controls.HtmlDisplay.Render(System.Web.UI.WebControls.WebControl,System.Web.UI.HtmlTextWriter,System.String,System.String,System.String)">
            <summary>
            输入控件内容
            </summary>
            <param name="webgrid">WebGrid对象</param>
            <param name="output">网页输出流</param>
            <param name="id">控件标识</param>
            <param name="width">控件宽度</param>
            <param name="height">控件高度</param>
        </member>
        <member name="M:Epoint.UI.Controls.HtmlDisplay.Epoint#UI#ICellEditor#ChangeID(System.String,System.String)">
            <summary>
            更改生成控件的ID
            </summary>
            <param name="OldID"></param>
            <param name="newID"></param>
        </member>
        <member name="M:Epoint.UI.Controls.HtmlDisplay.LoadData(System.String,System.String)">
            <summary>
            保存数据
            </summary>
            <param name="controlID"></param>
            <param name="value"></param>
        </member>
        <member name="M:Epoint.UI.Controls.HtmlDisplay.DataSave">
            <summary>
            数据保存
            </summary>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.Controls.HtmlDisplay.RaisePostBackEvent(System.String)">
            <summary>
            事件回调
            </summary>
            <param name="eventArgument"></param>
        </member>
        <member name="M:Epoint.UI.Controls.HtmlDisplay.RenderHtml(System.Web.UI.WebControls.WebControl,System.Web.UI.HtmlTextWriter,System.String,System.String,System.String)">
            <summary>
            生成Html
            </summary>
            <param name="webgrid"></param>
            <param name="output"></param>
            <param name="id"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:Epoint.UI.Controls.HtmlDisplay.Epoint#UI#ICellEditor#CtlSerial(System.Xml.XmlDocument)">
            <summary>
            对象序列化
            </summary>
            <param name="xml">XML对象</param>
            <returns>XML结点</returns>
        </member>
        <member name="M:Epoint.UI.Controls.HtmlDisplay.Epoint#UI#ICellEditor#CtlDeSerial(System.Xml.XmlDocument)">
            <summary>
            对象反序列化
            </summary>
            <param name="root">XML结点</param>
        </member>
        <member name="M:Epoint.UI.Controls.HtmlDisplay.Clone">
            <summary>
            复制对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.Controls.HtmlDisplay.Clone(Epoint.UI.GridCell)">
            <summary>
            复制对象
            </summary>
            <param name="DestCell"></param>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.Controls.HtmlDisplay.OnVisibleChanged(System.EventArgs)">
            <summary>
            显示改变事件
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Epoint.UI.Controls.HtmlDisplay.IsShowInViewPage">
            <summary>
            获取或设置是否在查看界面中显示
            </summary>
        </member>
        <member name="P:Epoint.UI.Controls.HtmlDisplay.WidthScale">
            <summary>
            取得和设置宽度比例
            </summary>
        </member>
        <member name="P:Epoint.UI.Controls.HtmlDisplay.HostGridCell">
            <summary>
            取得和设置宿住单元格
            </summary>
        </member>
        <member name="T:Epoint.UI.Sheet">
            <summary>
            模块名称：网格组件。
            版    本：1.0.0.0。
            内    容：Sheet页。
            摘    要：EpointForm中有多个
            文 件 名：Sheet.cs。
            作    者：周剑峰              创建        2009年8月21日
            </summary>
        </member>
        <member name="M:Epoint.UI.Sheet.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Epoint.UI.Sheet.CtlSerial(System.Xml.XmlDocument)">
            <summary>
            序列化对象
            </summary>
            <param name="xml"></param>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.Sheet.CtlDeSerial(System.Xml.XmlNode)">
            <summary>
            对象反序列化
            </summary>
            <param name="root"></param>
        </member>
        <member name="M:Epoint.UI.Sheet.DBGrid_DragDrop(System.Object,System.Windows.Forms.DragEventArgs)">
            <summary>
            网格拖放
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Epoint.UI.Sheet.SetCellInput(Epoint.UI.GridCell,System.String)">
            <summary>
            设置控件输入信息
            </summary>
            <param name="data"></param>
            <param name="cell"></param>
        </member>
        <member name="F:Epoint.UI.Sheet.ClonedSrcSeet">
            <summary>
            复制页的源
            </summary>
        </member>
        <member name="F:Epoint.UI.Sheet.WebGridCtl">
            <summary>
            WebGrid对象
            </summary>
        </member>
        <member name="M:Epoint.UI.Sheet.ToString">
            <summary>
            返回对象字符串
            </summary>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.Sheet.GetCellByID(System.String)">
            <summary>
            根据ID取得单元格
            </summary>
            <param name="ID"></param>
            <returns></returns>
        </member>
        <member name="E:Epoint.UI.Sheet.SheetNameChanged">
            <summary>
            页面名称改变事件
            </summary>
        </member>
        <member name="P:Epoint.UI.Sheet.SheetName">
            <summary>
            取得和设置页面名称
            </summary>
        </member>
        <member name="T:Epoint.UI.Controls.RadioButton">
            <summary>
            模块名称：网格组件—按钮控件。
            版    本：1.0.0.0。
            内    容：数据网格。
            摘    要：嵌与网格中的单选控件，支持BS和CS版本。
                      在网络编辑状态时，点鼠标中健来选中该控件
            文 件 名：RadioButton.cs。
            编 写 人：周剑峰。
            编写日期：2008年12月1日。
            </summary>
        </member>
        <member name="M:Epoint.UI.Controls.RadioButton.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Epoint.UI.Controls.RadioButton.RadioButton_Click(System.Object,System.EventArgs)">
            <summary>
            点击事件
            </summary>
        </member>
        <member name="M:Epoint.UI.Controls.RadioButton.WndProc(System.Windows.Forms.Message@)">
            <summary>
            处理消息
            </summary>
            <param name="m">传入的消息</param>
        </member>
        <member name="M:Epoint.UI.Controls.RadioButton.Epoint#UI#ICellEditor#ChangeID(System.String,System.String)">
            <summary>
            更改生成控件的ID
            </summary>
            <param name="OldID"></param>
            <param name="newID"></param>
        </member>
        <member name="M:Epoint.UI.Controls.RadioButton.Epoint#UI#ICellEditor#CreateChildControls(System.Web.UI.WebControls.WebControl,System.String)">
            <summary>
            创建子控件
            </summary>
            <param name="webgrid">WebGrid对象</param>
            <param name="id">控件标识</param>
        </member>
        <member name="M:Epoint.UI.Controls.RadioButton.Epoint#UI#ICellEditor#OnControlRemoved">
            <summary>
            控件移去事件
            </summary>
        </member>
        <member name="M:Epoint.UI.Controls.RadioButton.Epoint#UI#ICellEditor#OnPreRender(System.Web.UI.WebControls.WebControl,System.String)">
            <summary>
            绘制控件前事件（在BS中使用）
            </summary>
            <param name="webgrid">webGrid对象</param>
            <param name="id">控件标识</param>
        </member>
        <member name="M:Epoint.UI.Controls.RadioButton.Epoint#UI#ICellEditor#Render(System.Web.UI.WebControls.WebControl,System.Web.UI.HtmlTextWriter,System.String,System.String,System.String)">
            <summary>
            输入控件内容
            </summary>
            <param name="webGrid">WebGrid对象</param>
            <param name="output">网页输出流</param>
            <param name="id">控件标识</param>
            <param name="width">控件宽度</param>
            <param name="height">控件高度</param>
        </member>
        <member name="M:Epoint.UI.Controls.RadioButton.RenderHtml(System.Web.UI.WebControls.WebControl,System.Web.UI.HtmlTextWriter,System.String,System.String,System.String)">
            <summary>
            生成Html
            </summary>
            <param name="webgrid"></param>
            <param name="output"></param>
            <param name="id"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:Epoint.UI.Controls.RadioButton.Epoint#UI#ICellEditor#CtlSerial(System.Xml.XmlDocument)">
            <summary>
            对象序列化
            </summary>
            <param name="xml">XML对象</param>
            <returns>XML结点</returns>
        </member>
        <member name="M:Epoint.UI.Controls.RadioButton.Epoint#UI#ICellEditor#CtlDeSerial(System.Xml.XmlDocument)">
            <summary>
            对象反序列化
            </summary>
            <param name="root">XML结点</param>
        </member>
        <member name="M:Epoint.UI.Controls.RadioButton.Epoint#UI#ICellEditor#LoadData(System.String,System.String)">
            <summary>
            加载数据
            </summary>
            <param name="controlID">控件ID(BS中用)</param>
            <param name="value">值</param>
        </member>
        <member name="M:Epoint.UI.Controls.RadioButton.Epoint#UI#ICellEditor#DataSave">
            <summary>
            保存数据到单元格中
            </summary>
            <returns>是否可以保存</returns>
        </member>
        <member name="M:Epoint.UI.Controls.RadioButton.Epoint#UI#ICellEditor#RaisePostBackEvent(System.String)">
            <summary>
            传处客户端事件
            </summary>
            <param name="eventArgument">事件名称</param>
        </member>
        <member name="M:Epoint.UI.Controls.RadioButton.Clone">
            <summary>
            复制对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.Controls.RadioButton.Clone(Epoint.UI.GridCell)">
            <summary>
            复制对象
            </summary>
            <returns></returns>
        </member>
        <member name="P:Epoint.UI.Controls.RadioButton.GroupName">
            <summary>
            获取或设置分组名
            </summary>
        </member>
        <member name="P:Epoint.UI.Controls.RadioButton.Value">
            <summary>
            获取或设置值
            </summary>
        </member>
        <member name="P:Epoint.UI.Controls.RadioButton.Text">
            <summary>
            与该控件关联的文本
            </summary>
        </member>
        <member name="P:Epoint.UI.Controls.RadioButton.WidthScale">
            <summary>
            取得和设置宽度比例
            </summary>
        </member>
        <member name="P:Epoint.UI.Controls.RadioButton.HostGridCell">
            <summary>
            取得和设置宿住单元格
            </summary>
        </member>
        <member name="T:Epoint.UI.GridMethod">
            <summary>
            网格方法
            </summary>
        </member>
        <member name="M:Epoint.UI.GridMethod.DeleteRow(System.Int32)">
            <summary>
            删除行
            </summary>
            <param name="row"></param>
        </member>
        <member name="M:Epoint.UI.GridMethod.InsetRow(System.Int32)">
            <summary>
            插入行（自动复制插入位置的行）并在其上
            </summary>
            <param name="row"></param>
        </member>
        <member name="T:Epoint.UI.CellBorderStyle">
            <summary>
            模块名称：窗体组件。
            版    本：1.0.0.1。
            内    容：边框风格类。
            摘    要：当选择边线不合并时，则四条边的数据分别保存。
                      当选择边线合并时，
                          上下边相同时，存下边线
                          有合并线时，合并线优先
                          有合并但无线时，取短合并线
                          如果合并错位，则独自保存
                      左右边线算法与上下边线相同
            文 件 名：BorderStyle.cs。
            编 写 人：张雷。
            编写日期：2006年01月26日。
            修 改 人：张雷。
            修改日期：2006年01月26日。
            </summary>
        </member>
        <member name="M:Epoint.UI.CellBorderStyle.#ctor">
            <summary>
            构造函数。
            </summary>
        </member>
        <member name="M:Epoint.UI.CellBorderStyle.SetGridCell(Epoint.UI.GridCell)">
            <summary>
            设置单元对象
            </summary>
            <param name="cell"></param>
        </member>
        <member name="M:Epoint.UI.CellBorderStyle.DefaultStringVal">
            <summary>
            默认值
            </summary>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.CellBorderStyle.Equals(System.Object)">
            <summary>
            复制对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.CellBorderStyle.GetHashCode">
            <summary>
            取得对象Hash值
            </summary>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.CellBorderStyle.Equals(Epoint.UI.CellBorderStyle)">
            <summary>
            判断指定单元边框风格对象是否于自身相等。
            </summary>
        </member>
        <member name="M:Epoint.UI.CellBorderStyle.Clone">
            <summary>
            克隆边框风格。
            </summary>
        </member>
        <member name="M:Epoint.UI.CellBorderStyle.Clone2">
            <summary>
            克隆边框风格。
            </summary>
        </member>
        <member name="M:Epoint.UI.CellBorderStyle.Draw(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            绘制单元边框。
            </summary>
        </member>
        <member name="M:Epoint.UI.CellBorderStyle.FormString(System.String)">
            <summary>
            从字符串中回复对象
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.CellBorderStyle.ToString">
            <summary>
            转为字符串
            </summary>
            <returns></returns>
        </member>
        <member name="P:Epoint.UI.CellBorderStyle.LeftLine">
            <summary>
            获取或设置左线风格。
            </summary>
        </member>
        <member name="P:Epoint.UI.CellBorderStyle.TopLine">
            <summary>
            获取或设置顶线风格。
            </summary>
        </member>
        <member name="P:Epoint.UI.CellBorderStyle.RightLine">
            <summary>
            获取或设置右线风格。
            </summary>
        </member>
        <member name="P:Epoint.UI.CellBorderStyle.BottomLine">
            <summary>
            获取或设置底线风格。
            </summary>
        </member>
        <member name="P:Epoint.UI.CellBorderStyle.ForwardDiagonal">
            <summary>
            获取或设置正向对角线风格。
            </summary>
        </member>
        <member name="P:Epoint.UI.CellBorderStyle.BackwardDiagonal">
            <summary>
            获取或设置反向对角线风格。
            </summary>
        </member>
        <member name="P:Epoint.UI.CellBorderStyle.Lines">
            <summary>
            获取或设置线条组合样式。
            </summary>
        </member>
        <member name="P:Epoint.UI.CellBorderStyle.Default">
            <summary>
            获取默认边框风格。
            </summary>
        </member>
        <member name="T:Epoint.UI.Controls.ComboxBox">
            <summary>
            模块名称：网格组件—按钮控件。
            版    本：1.0.0.0。
            内    容：数据网格。
            摘    要：嵌与网格中的下拉框控件，支持BS和CS版本。
                      在网络编辑状态时，点鼠标中健来选中该控件
            文 件 名：ComboxBox.cs。
            编 写 人：周剑峰。
            编写日期：2009年4月1日。
            </summary>
        </member>
        <member name="M:Epoint.UI.Controls.ComboxBox.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Epoint.UI.Controls.ComboxBox.ComboxBox_SelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            选择值改变事件
            </summary>
        </member>
        <member name="M:Epoint.UI.Controls.ComboxBox.WndProc(System.Windows.Forms.Message@)">
            <summary>
            处理消息
            </summary>
            <param name="m">传入的消息</param>
        </member>
        <member name="M:Epoint.UI.Controls.ComboxBox.Epoint#UI#ICellEditor#ChangeID(System.String,System.String)">
            <summary>
            更改生成控件的ID
            </summary>
            <param name="OldID"></param>
            <param name="newID"></param>
        </member>
        <member name="M:Epoint.UI.Controls.ComboxBox.Epoint#UI#ICellEditor#OnControlRemoved">
            <summary>
            控件移去事件
            </summary>
        </member>
        <member name="M:Epoint.UI.Controls.ComboxBox.Epoint#UI#ICellEditor#CreateChildControls(System.Web.UI.WebControls.WebControl,System.String)">
            <summary>
            创建子控件
            </summary>
            <param name="webgrid">WebGrid对象</param>
            <param name="id">控件标识</param>
        </member>
        <member name="M:Epoint.UI.Controls.ComboxBox.Epoint#UI#ICellEditor#OnPreRender(System.Web.UI.WebControls.WebControl,System.String)">
            <summary>
            绘制控件前事件（在BS中使用）
            </summary>
            <param name="webgrid">webGrid对象</param>
            <param name="id">控件标识</param>
        </member>
        <member name="M:Epoint.UI.Controls.ComboxBox.Epoint#UI#ICellEditor#Render(System.Web.UI.WebControls.WebControl,System.Web.UI.HtmlTextWriter,System.String,System.String,System.String)">
            <summary>
            输入控件内容
            </summary>
            <param name="webGrid">WebGrid对象</param>
            <param name="output">网页输出流</param>
            <param name="id">控件标识</param>
            <param name="width">控件宽度</param>
            <param name="height">控件高度</param>
        </member>
        <member name="M:Epoint.UI.Controls.ComboxBox.RenderHtml(System.Web.UI.WebControls.WebControl,System.Web.UI.HtmlTextWriter,System.String,System.String,System.String)">
            <summary>
            生成Html
            </summary>
            <param name="webgrid"></param>
            <param name="output"></param>
            <param name="id"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:Epoint.UI.Controls.ComboxBox.Epoint#UI#ICellEditor#CtlSerial(System.Xml.XmlDocument)">
            <summary>
            对象序列化
            </summary>
            <param name="xml">XML对象</param>
            <returns>XML结点</returns>
        </member>
        <member name="M:Epoint.UI.Controls.ComboxBox.Epoint#UI#ICellEditor#CtlDeSerial(System.Xml.XmlDocument)">
            <summary>
            对象反序列化
            </summary>
            <param name="root">XML结点</param>
        </member>
        <member name="M:Epoint.UI.Controls.ComboxBox.Epoint#UI#ICellEditor#LoadData(System.String,System.String)">
            <summary>
            加载数据
            </summary>
            <param name="controlID">控件ID(BS中用)</param>
            <param name="value">值</param>
        </member>
        <member name="M:Epoint.UI.Controls.ComboxBox.Epoint#UI#ICellEditor#DataSave">
            <summary>
            保存数据到单元格中
            </summary>
            <returns>是否可以保存</returns>
        </member>
        <member name="M:Epoint.UI.Controls.ComboxBox.Epoint#UI#ICellEditor#RaisePostBackEvent(System.String)">
            <summary>
            传处客户端事件
            </summary>
            <param name="eventArgument">事件名称</param>
        </member>
        <member name="M:Epoint.UI.Controls.ComboxBox.Clone">
            <summary>
            复制对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.Controls.ComboxBox.Clone(Epoint.UI.GridCell)">
            <summary>
            复制对象
            </summary>
            <returns></returns>
        </member>
        <member name="P:Epoint.UI.Controls.ComboxBox.BackColor">
            <summary>
            获取或设置控件的背景色
            </summary>
        </member>
        <member name="P:Epoint.UI.Controls.ComboxBox.Items">
            <summary>
            取得和设置下拉列表
            </summary>
        </member>
        <member name="P:Epoint.UI.Controls.ComboxBox.DataMember">
            <summary>
            取得和设置数据对象
            </summary>
        </member>
        <member name="P:Epoint.UI.Controls.ComboxBox.DisplayMember">
            <summary>
            取得和设置名字字段
            </summary>
        </member>
        <member name="P:Epoint.UI.Controls.ComboxBox.ValueMember">
            <summary>
            取得和设置值字段
            </summary>
        </member>
        <member name="P:Epoint.UI.Controls.ComboxBox.WidthScale">
            <summary>
            取得和设置宽度比例
            </summary>
        </member>
        <member name="P:Epoint.UI.Controls.ComboxBox.HostGridCell">
            <summary>
            取得和设置宿住单元格
            </summary>
        </member>
        <member name="T:Epoint.UI.Controls.Chart">
            <summary>
            模块名称：网格组件—按钮控件。
            版    本：1.0.0.0。
            内    容：数据网格。
            摘    要：嵌与网格中的图表控件，支持BS和CS版本。
                      在网络编辑状态时，点鼠标中健来选中该控件 
            文 件 名：Chart.cs。
            编 写 人：周剑峰。
            编写日期：2009年7月27日。
            </summary>
        </member>
        <member name="M:Epoint.UI.Controls.Chart.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Epoint.UI.Controls.Chart.Epoint#UI#ICellEditor#CreateChildControls(System.Web.UI.WebControls.WebControl,System.String)">
            <summary>
            创建子控件
            </summary>
            <param name="webgrid">WebGrid对象</param>
            <param name="id">控件标识</param>
        </member>
        <member name="M:Epoint.UI.Controls.Chart.Epoint#UI#ICellEditor#OnControlRemoved">
            <summary>
            控件移去事件
            </summary>
        </member>
        <member name="M:Epoint.UI.Controls.Chart.RenderHtml(System.Web.UI.WebControls.WebControl,System.Web.UI.HtmlTextWriter,System.String,System.String,System.String)">
            <summary>
            生成Html
            </summary>
            <param name="webgrid"></param>
            <param name="output"></param>
            <param name="id"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:Epoint.UI.Controls.Chart.Epoint#UI#ICellEditor#OnPreRender(System.Web.UI.WebControls.WebControl,System.String)">
            <summary>
            绘制控件前事件（在BS中使用）
            </summary>
            <param name="webgrid">webGrid对象</param>
            <param name="id">控件标识</param>
        </member>
        <member name="M:Epoint.UI.Controls.Chart.Epoint#UI#ICellEditor#Render(System.Web.UI.WebControls.WebControl,System.Web.UI.HtmlTextWriter,System.String,System.String,System.String)">
            <summary>
            输入控件内容
            </summary>
            <param name="webGrid">WebGrid对象</param>
            <param name="output">网页输出流</param>
            <param name="id">控件标识</param>
            <param name="width">控件宽度</param>
            <param name="height">控件高度</param>
        </member>
        <member name="M:Epoint.UI.Controls.Chart.Epoint#UI#ICellEditor#LoadData(System.String,System.String)">
            <summary>
            加载数据
            </summary>
            <param name="controlID">控件ID(BS中用)</param>
            <param name="value">值</param>
        </member>
        <member name="M:Epoint.UI.Controls.Chart.Epoint#UI#ICellEditor#DataSave">
            <summary>
            保存数据到单元格中
            </summary>
            <returns>是否可以保存</returns>
        </member>
        <member name="M:Epoint.UI.Controls.Chart.RaisePostBackEvent(System.String)">
            <summary>
            事件反馈
            </summary>
            <param name="eventArgument"></param>
        </member>
        <member name="M:Epoint.UI.Controls.Chart.Epoint#UI#ICellEditor#CtlSerial(System.Xml.XmlDocument)">
            <summary>
            对象序列化
            </summary>
            <param name="xml">XML对象</param>
            <returns>XML结点</returns>
        </member>
        <member name="M:Epoint.UI.Controls.Chart.Epoint#UI#ICellEditor#CtlDeSerial(System.Xml.XmlDocument)">
            <summary>
            对象反序列化
            </summary>
            <param name="root">XML结点</param>
        </member>
        <member name="M:Epoint.UI.Controls.Chart.Epoint#UI#ICellEditor#ChangeID(System.String,System.String)">
            <summary>
            更改生成控件的ID
            </summary>
            <param name="OldID"></param>
            <param name="newID"></param>
        </member>
        <member name="M:Epoint.UI.Controls.Chart.WndProc(System.Windows.Forms.Message@)">
            <summary>
            处理消息
            </summary>
            <param name="m">传入的消息</param>
        </member>
        <member name="M:Epoint.UI.Controls.Chart.OnLoad(System.EventArgs)">
            <summary>
            控件加载事件
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Epoint.UI.Controls.Chart.Dispose(System.Boolean)">
            <summary>
            控件释放事件
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Epoint.UI.Controls.Chart.Clone">
            <summary>
            复制对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.Controls.Chart.Clone(Epoint.UI.GridCell)">
            <summary>
            复制对象
            </summary>
            <returns></returns>
        </member>
        <member name="P:Epoint.UI.Controls.Chart.HostGridCell">
            <summary>
            取得和设置宿住单元格
            </summary>
        </member>
        <member name="P:Epoint.UI.Controls.Chart.WidthScale">
            <summary>
            取得和设置宽度比例
            </summary>
        </member>
        <member name="P:Epoint.UI.Controls.Chart.ChartTp">
            <summary>
            取得和设置图表类型
            </summary>
        </member>
        <member name="P:Epoint.UI.Controls.Chart.Title">
            <summary>
            取得和设置数据标题
            </summary>
        </member>
        <member name="P:Epoint.UI.Controls.Chart.DataArea">
            <summary>
            数据区域
            </summary>
        </member>
        <member name="P:Epoint.UI.Controls.Chart.DataIsHor">
            <summary>
            数据是否垂直组织
            </summary>
        </member>
        <member name="P:Epoint.UI.Controls.Chart.OutFlashFileName">
            <summary>
            外部Flash文件名称
            </summary>
        </member>
        <member name="T:Epoint.UI.Controls.Chart.ChartType">
            <summary>
            图表类型
            </summary>
        </member>
        <member name="F:Epoint.UI.Controls.Chart.ChartType.Pie">
            <summary>
            饼图
            </summary>
        </member>
        <member name="F:Epoint.UI.Controls.Chart.ChartType.Bar">
            <summary>
            柱状图
            </summary>
        </member>
        <member name="F:Epoint.UI.Controls.Chart.ChartType.Line">
            <summary>
            曲线图
            </summary>
        </member>
        <member name="T:Epoint.UI.Controls.Chart.FlashCtl">
            <summary>
            FLash显示子控件
            </summary>
        </member>
        <member name="M:Epoint.UI.Controls.Chart.FlashCtl.WndProc(System.Windows.Forms.Message@)">
            <summary>
            处理鼠标消息
            </summary>
            <param name="m"></param>
        </member>
        <member name="T:Epoint.UI.RichTextCell">
            <summary>
            模块名称：网格组件—按钮控件。
            版    本：1.0.0.0。
            内    容：副文本单元格输入控件。
            摘    要：嵌与网格中的单元格子控件，支持BS和CS版本。
                      主要是可以设置显示副文本内容。
            实现方式：采用多个GridCell拼接而成。
            文 件 名：RichTextCell.cs。
            编 写 人：周剑峰。
            编写日期：2010年6月18日。
            </summary>
        </member>
        <member name="M:Epoint.UI.RichTextCell.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Epoint.UI.RichTextCell.RichTextCell_gridPropertyChanged(System.Object,System.String,System.Object,System.Object)">
            <summary>
            单元格属性改变事件
            </summary>
        </member>
        <member name="M:Epoint.UI.RichTextCell.Instace_CellEndInput(System.Object,System.EventArgs)">
            <summary>
            单元格输入结束事件
            </summary>
        </member>
        <member name="M:Epoint.UI.RichTextCell.DrawGrid(System.Drawing.Graphics)">
            <summary>
            重绘控件
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:Epoint.UI.RichTextCell.DrawGridCell(System.Drawing.Graphics,Epoint.UI.GridCell)">
            <summary>
            绘制单个单元格
            </summary>
        </member>
        <member name="M:Epoint.UI.RichTextCell.CtlSerial(System.Xml.XmlDocument)">
            <summary>
            序列化
            </summary>
            <param name="xml"></param>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.RichTextCell.CtlDeSerial(System.Xml.XmlDocument)">
            <summary>
            反序列化
            </summary>
            <param name="xml"></param>
        </member>
        <member name="M:Epoint.UI.RichTextCell.Render(System.Web.UI.WebControls.WebControl,System.Web.UI.HtmlTextWriter,System.String,System.String,System.String)">
            <summary>
            输出Html内容
            </summary>
            <param name="webgrid"></param>
            <param name="output"></param>
            <param name="id"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="T:Epoint.UI.Calculator">
            <summary>
            相关计算器
            </summary>
        </member>
        <member name="M:Epoint.UI.Calculator.ContainBkEndExp(System.Object)">
            <summary>
            判定是否含有表达式
            </summary>
            <param name="val">表达式</param>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.Calculator.ExeBkEndExpValue(Epoint.UI.Grid,System.String,System.Web.UI.Page)">
            <summary>
            计算后台表达式值
            </summary>
            <param name="grid">网格对象</param>
            <param name="expression">表达式</param>
            <param name="page">Web页面对象</param>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.Calculator.ConvertToUpper(System.Decimal)">
            <summary>
            将数字金额转换成大写人民币形式。
            </summary>
            <param name="num">金额</param>
            <returns>返回大写形式</returns>
        </member>
        <member name="M:Epoint.UI.Calculator.ContainExp(System.Object)">
            <summary>
            判定是否含有表达式
            </summary>
            <param name="val">表达式</param>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.Calculator.ExeExpValue(Epoint.UI.GridBase,System.String)">
            <summary>
            计算表达式值
            </summary>
            <param name="grid">网格对象</param>
            <param name="expression">表达式</param>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.Calculator.SetExpValue(System.Object,System.String,System.String,System.Object)">
            <summary>
            设置表达式字段值
            </summary>
        </member>
        <member name="M:Epoint.UI.Calculator.ReplaceSysValue(Epoint.UI.GridCell,System.String)">
            <summary>
            替换系统值
            </summary>
            <param name="cell">单元格</param>
            <param name="str">表达式</param>
            <returns></returns>
        </member>
        <member name="P:Epoint.UI.Calculator.SupportFunctions">
            <summary>
             取得支持的系统函数
            </summary>
        </member>
        <member name="P:Epoint.UI.Calculator.SupportSysVals">
            <summary>
             取得支持的系统参数列表
            </summary>
        </member>
        <member name="T:Epoint.UI.Calculator.DescItem">
            <summary>
            功能项描述
            </summary>
        </member>
        <member name="M:Epoint.UI.Calculator.DescItem.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="Description"></param>
        </member>
        <member name="P:Epoint.UI.Calculator.DescItem.Name">
            <summary>
            名称
            </summary>
        </member>
        <member name="P:Epoint.UI.Calculator.DescItem.Description">
            <summary>
            描述
            </summary>
        </member>
        <member name="T:Epoint.UI.CSSDefine">
            <summary>
            模块名称：网格组件。
            版    本：1.0.0.0。
            内    容：CSS样式定义。
            摘    要：
            文 件 名：CSSDefine.cs。
            编 写 人：周剑峰。
            编写日期：2009年11月11日。
            </summary>
        </member>
        <member name="M:Epoint.UI.CSSDefine.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Epoint.UI.CSSDefine.RefreshCell(Epoint.UI.GridCell)">
            <summary>
            根据样式刷新单元格
            </summary>
            <param name="cell"></param>
        </member>
        <member name="M:Epoint.UI.CSSDefine.AddCommonCss(System.Collections.Generic.Dictionary{System.String,Epoint.UI.CSSDefine})">
            <summary>
            添加默认样式
            </summary>
        </member>
        <member name="M:Epoint.UI.CSSDefine.RemoveCommonCss(System.Collections.Generic.Dictionary{System.String,Epoint.UI.CSSDefine})">
            <summary>
            移去默认样式
            </summary>
        </member>
        <member name="M:Epoint.UI.CSSDefine.Save(System.Collections.Generic.Dictionary{System.String,Epoint.UI.CSSDefine},System.Xml.XmlDocument)">
            <summary>
            保存
            </summary>
            <param name="CssDefines"></param>
            <param name="xml"></param>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.CSSDefine.Load(System.Collections.Generic.Dictionary{System.String,Epoint.UI.CSSDefine},System.Xml.XmlNode)">
            <summary>
            加载
            </summary>
            <param name="CssDefines"></param>
            <param name="element"></param>
        </member>
        <member name="M:Epoint.UI.CSSDefine.Clone">
            <summary>
            复制对象
            </summary>
            <returns></returns>
        </member>
        <member name="P:Epoint.UI.CSSDefine.Name">
            <summary>
            CSS样式名称
            </summary>
        </member>
        <member name="P:Epoint.UI.CSSDefine.CssContent">
            <summary>
            CSS样式定义
            </summary>
        </member>
        <member name="P:Epoint.UI.CSSDefine.BorderStyle">
            <summary>
            获取或设置单元边框风格。
            </summary>
        </member>
        <member name="P:Epoint.UI.CSSDefine.BackColor">
            <summary>
            获取或设置单元背景色。
            </summary>
        </member>
        <member name="P:Epoint.UI.CSSDefine.ForeColor">
            <summary>
            获取或设置字体色。
            </summary>
        </member>
        <member name="P:Epoint.UI.CSSDefine.Font">
            <summary>
            获取或设置字体。
            </summary>
        </member>
        <member name="T:Epoint.UI.WebControls.EpointWebForm">
            <summary>
            模块名称：EpointWebForm控件。
            版    本：1.0.0.0。
            内    容：EpointWebForm控件(BS版)。
            摘    要：包含多个Sheet页面，控制保存整个表单展示。
            文 件 名：EpointForm.cs。
            作    者：周剑峰              创建        2009年8月21日
            </summary>
        </member>
        <member name="M:Epoint.UI.WebControls.EpointWebForm.GetImage(System.Int32,System.Int32)">
            <summary>
            取得网格单元格中的图片
            </summary>
        </member>
        <member name="M:Epoint.UI.WebControls.EpointWebForm.Print">
            <summary>
            打印网格
            </summary>
        </member>
        <member name="M:Epoint.UI.WebControls.EpointWebForm.OnInit(System.EventArgs)">
            <summary>
            初使化
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Epoint.UI.WebControls.EpointWebForm.OnPreRender(System.EventArgs)">
            <summary>
            继承处理输出前事件
            </summary>
        </member>
        <member name="M:Epoint.UI.WebControls.EpointWebForm.RenderContents(System.Web.UI.HtmlTextWriter)">
            <summary>
            输出控件内容
            </summary>
            <param name="output"></param>
        </member>
        <member name="M:Epoint.UI.WebControls.EpointWebForm.OutPutStripSheets(System.Web.UI.HtmlTextWriter)">
            <summary>
            利用Tab页分开Sheet
            </summary>
            <param name="output"></param>
        </member>
        <member name="M:Epoint.UI.WebControls.EpointWebForm.OutPutNavBarSheets(System.Web.UI.HtmlTextWriter)">
            <summary>
            输出NavBar分割的Sheet
            </summary>
            <param name="output"></param>
        </member>
        <member name="M:Epoint.UI.WebControls.EpointWebForm.Generate_EditPage_Html">
            <summary>
            编辑页面文件生成，包括aspx
            <list type="table">
            <listheader>
            <description>说明</description>
            </listheader>
            	<item><description>
            		 <para>此方法由平台后台管理程序使用，开发人员平常不需要使用</para>
                  </description>   
                </item> 
            </list>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.WebControls.EpointWebForm.Generate_AddPage_Html">
            <summary>
            新增页面文件生成，包括aspx
            <list type="table">
            <listheader>
            <description>说明</description>
            </listheader>
            	<item><description>
            		 <para>此方法由平台后台管理程序使用，开发人员平常不需要使用</para>
                  </description>   
                </item> 
            </list>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.WebControls.EpointWebForm.Generate_DetailPage_Html">
            <summary>
            明细页面文件生成，包括aspx
            <list type="table">
            <listheader>
            <description>说明</description>
            </listheader>
            	<item><description>
            		 <para>此方法由平台后台管理程序使用，开发人员平常不需要使用</para>
                  </description>   
                </item> 
            </list>
            </summary>
            <returns>string</returns>
        </member>
        <member name="M:Epoint.UI.WebControls.EpointWebForm.Generate_PrintPage_Html">
            <summary>
            明细页面文件生成，包括aspx
            <list type="table">
            <listheader>
            <description>说明</description>
            </listheader>
            	<item><description>
            		 <para>此方法由平台后台管理程序使用，开发人员平常不需要使用</para>
                  </description>   
                </item> 
            </list>
            </summary>
            <returns>string</returns>
        </member>
        <member name="M:Epoint.UI.WebControls.EpointWebForm.GenFormCode(Epoint.UI.WebControls.WebGrid,System.IO.StringWriter)">
            <summary>
            生成表单内容
            </summary>
            <param name="webgrid"></param>
            <param name="output"></param>
        </member>
        <member name="M:Epoint.UI.WebControls.EpointWebForm.GenFormPrintCode(Epoint.UI.WebControls.WebGrid,System.IO.StringWriter)">
            <summary>
            生成表单打印内容
            </summary>
            <param name="webgrid"></param>
            <param name="output"></param>
        </member>
        <member name="M:Epoint.UI.WebControls.EpointWebForm.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)">
            <summary>
            激发回退事件
            </summary>
            <param name="eventArgument">参数</param>
        </member>
        <member name="M:Epoint.UI.WebControls.EpointWebForm.GetCellByID(System.String)">
            <summary>
            根据ID取得单元格
            </summary>
            <param name="ID"></param>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.WebControls.EpointWebForm.SetCellValue(System.String,System.Object)">
            <summary>
            设置单元格值
            </summary>
            <param name="ID"></param>
            <param name="value"></param>
        </member>
        <member name="M:Epoint.UI.WebControls.EpointWebForm.GetCellValue(System.String)">
            <summary>
            取得单元格值
            </summary>
            <param name="ID"></param>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.WebControls.EpointWebForm.ExportToPDF(System.IO.Stream)">
            <summary>
            导出到PDF
            </summary>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.WebControls.EpointWebForm.ExportToDoc">
            <summary>
            导出到Word
            </summary>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.WebControls.EpointWebForm.ExportToHtml">
            <summary>
            导出Html
            </summary>
            <returns></returns>
        </member>
        <member name="P:Epoint.UI.WebControls.EpointWebForm.ReportFileName">
            <summary>
            报表文件名
            </summary>
        </member>
        <member name="P:Epoint.UI.WebControls.EpointWebForm.ImageGetPage">
            <summary>
            取得图片的URL
            </summary>
        </member>
        <member name="P:Epoint.UI.WebControls.EpointWebForm.PrintPage">
            <summary>
            打印页面
            </summary>
        </member>
        <member name="P:Epoint.UI.WebControls.EpointWebForm.ShowEdit">
            <summary>
            是否显示输入控件
            </summary>
        </member>
        <member name="P:Epoint.UI.WebControls.EpointWebForm.IsOnPrint">
            <summary>
            是否打印
            </summary>
        </member>
        <member name="P:Epoint.UI.WebControls.EpointWebForm.Webgrids">
            <summary>
            取得WebGrid对象集合
            </summary>
        </member>
        <member name="P:Epoint.UI.WebControls.EpointWebForm.UseEpointData">
            <summary>
             取得是否使用Epoint通用数据获取
            </summary>
        </member>
        <member name="P:Epoint.UI.WebControls.EpointWebForm.Sheets">
            <summary>
            取得页面对象集合
            </summary>
        </member>
        <member name="P:Epoint.UI.WebControls.EpointWebForm.DataSource">
            <summary>
            设置数据源对象
            </summary>
        </member>
        <member name="E:Epoint.UI.WebControls.EpointWebForm.getExternStream">
            <summary>5
            取得额外对象流事件
            </summary>
        </member>
        <member name="P:Epoint.UI.WebControls.EpointWebForm.EpointForm">
            <summary>
            取得EpointForm对象实体
            </summary>
        </member>
        <member name="P:Epoint.UI.WebControls.EpointWebForm.TagKey">
            <summary>
            重置标签
            </summary>
        </member>
        <member name="P:Epoint.UI.WebControls.EpointWebForm.TagName">
            <summary>
            重置标签
            </summary>
        </member>
        <member name="T:Epoint.UI.WebControls.EpointWebForm.GridExternStream">
            <summary>
            额外对象流事件代理
            </summary>
            <param name="sender"></param>
            <returns></returns>
        </member>
        <member name="T:Epoint.UI.Controls.CheckBox">
            <summary>
            模块名称：网格组件—按钮控件。
            版    本：1.0.0.0。
            内    容：数据网格。
            摘    要：嵌与网格中的勾选控件，支持BS和CS版本。
                      在网络编辑状态时，点鼠标中健来选中该控件
            文 件 名：CheckBox.cs。
            编 写 人：周剑峰。
            编写日期：2008年12月1日。
            </summary>
        </member>
        <member name="M:Epoint.UI.Controls.CheckBox.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Epoint.UI.Controls.CheckBox.CheckBox_Click(System.Object,System.EventArgs)">
            <summary>
            点击事件
            </summary>
        </member>
        <member name="M:Epoint.UI.Controls.CheckBox.WndProc(System.Windows.Forms.Message@)">
            <summary>
            处理消息
            </summary>
            <param name="m">传入的消息</param>
        </member>
        <member name="M:Epoint.UI.Controls.CheckBox.Epoint#UI#ICellEditor#CreateChildControls(System.Web.UI.WebControls.WebControl,System.String)">
            <summary>
            创建子控件
            </summary>
            <param name="webgrid">WebGrid对象</param>
            <param name="id">控件标识</param>
        </member>
        <member name="M:Epoint.UI.Controls.CheckBox.Epoint#UI#ICellEditor#OnControlRemoved">
            <summary>
            控件移去事件
            </summary>
        </member>
        <member name="M:Epoint.UI.Controls.CheckBox.Epoint#UI#ICellEditor#OnPreRender(System.Web.UI.WebControls.WebControl,System.String)">
            <summary>
            绘制控件前事件（在BS中使用）
            </summary>
            <param name="webgrid">webGrid对象</param>
            <param name="id">控件标识</param>
        </member>
        <member name="M:Epoint.UI.Controls.CheckBox.Epoint#UI#ICellEditor#ChangeID(System.String,System.String)">
            <summary>
            更改生成控件的ID
            </summary>
            <param name="OldID"></param>
            <param name="newID"></param>
        </member>
        <member name="M:Epoint.UI.Controls.CheckBox.Epoint#UI#ICellEditor#Render(System.Web.UI.WebControls.WebControl,System.Web.UI.HtmlTextWriter,System.String,System.String,System.String)">
            <summary>
            输入控件内容
            </summary>
            <param name="webGrid">WebGrid对象</param>
            <param name="output">网页输出流</param>
            <param name="id">控件标识</param>
            <param name="width">控件宽度</param>
            <param name="height">控件高度</param>
        </member>
        <member name="M:Epoint.UI.Controls.CheckBox.Epoint#UI#ICellEditor#RenderHtml(System.Web.UI.WebControls.WebControl,System.Web.UI.HtmlTextWriter,System.String,System.String,System.String)">
            <summary>
            生成Html
            </summary>
            <param name="webgrid"></param>
            <param name="output"></param>
            <param name="id"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:Epoint.UI.Controls.CheckBox.Epoint#UI#ICellEditor#CtlSerial(System.Xml.XmlDocument)">
            <summary>
            对象序列化
            </summary>
            <param name="xml">XML对象</param>
            <returns>XML结点</returns>
        </member>
        <member name="M:Epoint.UI.Controls.CheckBox.Epoint#UI#ICellEditor#CtlDeSerial(System.Xml.XmlDocument)">
            <summary>
            对象反序列化
            </summary>
            <param name="root">XML结点</param>
        </member>
        <member name="M:Epoint.UI.Controls.CheckBox.Epoint#UI#ICellEditor#LoadData(System.String,System.String)">
            <summary>
            加载数据
            </summary>
            <param name="controlID">控件ID(BS中用)</param>
            <param name="value">值</param>
        </member>
        <member name="M:Epoint.UI.Controls.CheckBox.Epoint#UI#ICellEditor#DataSave">
            <summary>
            保存数据到单元格中
            </summary>
            <returns>是否可以保存</returns>
        </member>
        <member name="M:Epoint.UI.Controls.CheckBox.Epoint#UI#ICellEditor#RaisePostBackEvent(System.String)">
            <summary>
            传处客户端事件
            </summary>
            <param name="eventArgument">事件名称</param>
        </member>
        <member name="M:Epoint.UI.Controls.CheckBox.Clone">
            <summary>
            复制对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.Controls.CheckBox.Clone(Epoint.UI.GridCell)">
            <summary>
            复制对象
            </summary>
            <returns></returns>
        </member>
        <member name="P:Epoint.UI.Controls.CheckBox.Text">
            <summary>
            与该控件关联的文本
            </summary>
        </member>
        <member name="P:Epoint.UI.Controls.CheckBox.HostGridCell">
            <summary>
            取得和设置宿住单元格
            </summary>
        </member>
        <member name="P:Epoint.UI.Controls.CheckBox.WidthScale">
            <summary>
            取得和设置宽度比例
            </summary>
        </member>
        <member name="T:Epoint.UI.InstanceInput">
            <summary>
            网格即时输入框
            当双击单元格时，或在单元格内输入字符时，出现输入框
            </summary>
        </member>
        <member name="M:Epoint.UI.InstanceInput.IsInEdit(Epoint.UI.Grid)">
            <summary>
            取得是否在编辑
            </summary>
        </member>
        <member name="M:Epoint.UI.InstanceInput.StartInput(Epoint.UI.Grid,System.Boolean)">
            <summary>
            添加编辑控件
            </summary>
        </member>
        <member name="M:Epoint.UI.InstanceInput.EndInput(Epoint.UI.Grid)">
            <summary>
            结束输入
            </summary>
        </member>
        <member name="T:Epoint.UI.Controls.IFrame">
            <summary>
            模块名称：网格组件—按钮控件。
            版    本：1.0.0.0。
            内    容：Web控件。
            摘    要：IFrame控件
            文 件 名：IFrame.cs。
            编 写 人：周剑峰。
            编写日期：2009年10月16日。
            </summary>
        </member>
        <member name="M:Epoint.UI.Controls.IFrame.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Epoint.UI.Controls.IFrame.WndProc(System.Windows.Forms.Message@)">
            <summary>
            处理消息
            </summary>
            <param name="m">传入的消息</param>
        </member>
        <member name="M:Epoint.UI.Controls.IFrame.CreateChildControls(System.Web.UI.WebControls.WebControl,System.String)">
            <summary>
            创建子控件
            </summary>
            <param name="webGrid">WebGrid对象</param>
            <param name="id">控件标识</param>
        </member>
        <member name="M:Epoint.UI.Controls.IFrame.Epoint#UI#ICellEditor#OnControlRemoved">
            <summary>
            控件移去事件
            </summary>
        </member>
        <member name="M:Epoint.UI.Controls.IFrame.OnPreRender(System.Web.UI.WebControls.WebControl,System.String)">
            <summary>
            绘制控件前事件（在BS中使用）
            </summary>
            <param name="webgrid">webGrid对象</param>
            <param name="id">控件标识</param>
        </member>
        <member name="M:Epoint.UI.Controls.IFrame.Epoint#UI#ICellEditor#ChangeID(System.String,System.String)">
            <summary>
            更改生成控件的ID
            </summary>
            <param name="OldID"></param>
            <param name="newID"></param>
        </member>
        <member name="M:Epoint.UI.Controls.IFrame.Render(System.Web.UI.WebControls.WebControl,System.Web.UI.HtmlTextWriter,System.String,System.String,System.String)">
            <summary>
            输入控件内容
            </summary>
            <param name="webgrid">WebGrid对象</param>
            <param name="output">网页输出流</param>
            <param name="id">控件标识</param>
            <param name="width">控件宽度</param>
            <param name="height">控件高度</param>
        </member>
        <member name="M:Epoint.UI.Controls.IFrame.LoadData(System.String,System.String)">
            <summary>
            保存数据
            </summary>
            <param name="controlID"></param>
            <param name="value"></param>
        </member>
        <member name="M:Epoint.UI.Controls.IFrame.DataSave">
            <summary>
            数据保存
            </summary>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.Controls.IFrame.RaisePostBackEvent(System.String)">
            <summary>
            事件回调
            </summary>
            <param name="eventArgument"></param>
        </member>
        <member name="M:Epoint.UI.Controls.IFrame.RenderHtml(System.Web.UI.WebControls.WebControl,System.Web.UI.HtmlTextWriter,System.String,System.String,System.String)">
            <summary>
            生成Html
            </summary>
            <param name="webgrid"></param>
            <param name="output"></param>
            <param name="id"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:Epoint.UI.Controls.IFrame.Epoint#UI#ICellEditor#CtlSerial(System.Xml.XmlDocument)">
            <summary>
            对象序列化
            </summary>
            <param name="xml">XML对象</param>
            <returns>XML结点</returns>
        </member>
        <member name="M:Epoint.UI.Controls.IFrame.Epoint#UI#ICellEditor#CtlDeSerial(System.Xml.XmlDocument)">
            <summary>
            对象反序列化
            </summary>
            <param name="root">XML结点</param>
        </member>
        <member name="M:Epoint.UI.Controls.IFrame.Clone">
            <summary>
            复制对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.Controls.IFrame.Clone(Epoint.UI.GridCell)">
            <summary>
            复制对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:Epoint.UI.Controls.IFrame.OnVisibleChanged(System.EventArgs)">
            <summary>
            显示改变事件
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:Epoint.UI.Controls.IFrame.Attributes">
            <summary>
            设置控件属性
            </summary>
        </member>
        <member name="P:Epoint.UI.Controls.IFrame.ShowBorder">
            <summary>
            设置是否显示边框
            </summary>
        </member>
        <member name="P:Epoint.UI.Controls.IFrame.WidthScale">
            <summary>
            取得和设置宽度比例
            </summary>
        </member>
        <member name="P:Epoint.UI.Controls.IFrame.HostGridCell">
            <summary>
            取得和设置宿住单元格
            </summary>
        </member>
        <member name="T:Epoint.UI.GridRow">
            <summary>
            模块名称：网格组件。
            版    本：1.0.0.0。
            内    容：网格基类。
            摘    要：网格行对象，记录行对象的一些属性。
            文 件 名：GridBase.cs。
            编 写 人：张雷。
            编写日期：2006年01月26日。
            修 改 人：周剑峰。
            修改日期：2008年08月25日。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridRow.#ctor(Epoint.UI.GridBase)">
            <summary>
            构造函数。
            </summary>
            <param name="grid">宿主网格</param>
        </member>
        <member name="M:Epoint.UI.GridRow.Reset">
            <summary>
            重置单元格。
            说明：将单元格所有属性恢复为默认值。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridRow.CopyTo(Epoint.UI.GridRow)">
            <summary>
            将当前行的设置复制到目标行。
            </summary>
        </member>
        <member name="M:Epoint.UI.GridRow.NotifyChange``1(``0@,``0)">
            <summary>
            属性变动
            </summary>
        </member>
        <member name="M:Epoint.UI.GridRow.ToString">
            <summary>
            取得对象字符串
            </summary>
            <returns></returns>
        </member>
        <member name="F:Epoint.UI.GridRow.ClonedSrcGridRow">
            <summary>
            克隆源行对象
            </summary>
        </member>
        <member name="P:Epoint.UI.GridRow.Grid">
            <summary>
            获取宿主网格。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridRow.Item(System.Int32)">
            <summary>
            根据指定索引设置网该行的指定单元。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridRow.Row">
            <summary>
            获取行索引。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridRow.Height">
            <summary>
            获取或设置网格行高度。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridRow.Top">
            <summary>
            获取网格行顶坐标。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridRow.Bottom">
            <summary>
            获取网格行底坐标。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridRow.ID">
            <summary>
            取得和设置控件自定义标识
            </summary>
        </member>
        <member name="P:Epoint.UI.GridRow.Tag">
            <summary>
            获取或设置用户自定义数据。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridRow.BackColor">
            <summary>
            获取或设置背景色。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridRow.Font">
            <summary>
            获取或设置字体。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridRow.ForeColor">
            <summary>
            获取或设置前景色。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridRow.CssClass">
            <summary>
            取得和设置BS中的样式
            </summary>
        </member>
        <member name="P:Epoint.UI.GridRow.Visible">
            <summary>
            取得和设置BS中是否隐藏
            </summary>
        </member>
        <member name="P:Epoint.UI.GridRow.FixedRowHeight">
            <summary>
            取得和设置固定行高
            </summary>
        </member>
        <member name="P:Epoint.UI.GridRow.HideInViewPage">
            <summary>
            取得和设置是否在只读页中隐藏
            </summary>
        </member>
        <member name="P:Epoint.UI.GridRow.ReadOnly">
            <summary>
            获取或设置只读性。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridRow.CanSelect">
            <summary>
            获取或设置可选性。
            </summary>
        </member>
        <member name="P:Epoint.UI.GridRow.DataMember">
            <summary>
            取得和设置数据对象
            </summary>
        </member>
        <member name="P:Epoint.UI.GridRow.DataCompoment">
            <summary>
            取得该行的绑定对象
            </summary>
        </member>
        <member name="P:Epoint.UI.GridRow.ExpandType">
            <summary>
            取得和设置数据扩展方式
            </summary>
        </member>
        <member name="P:Epoint.UI.GridRow.ExpandSapnRow">
            <summary>
            取得和设置扩展包含下包方包含几行
            </summary>
        </member>
        <member name="P:Epoint.UI.GridRow.ExpandIndex">
            <summary>
            取得和设置扩展行索引
            </summary>
        </member>
        <member name="P:Epoint.UI.GridRow.DataIndex">
            <summary>
            取得和设置数据行（记录绑定数据指定的数据行）
            </summary>
        </member>
        <member name="P:Epoint.UI.GridRow.ReleateExpandField">
            <summary>
            取得和设置关联扩展的字段,多个用豆号隔开，不要写@符
            </summary>
        </member>
        <member name="P:Epoint.UI.GridRow.ReleateExpandColIndex">
            <summary>
            取得和设置关联扩展的字段,多个用豆号隔开
            </summary>
        </member>
        <member name="P:Epoint.UI.GridRow.CopyWhileExpand">
            <summary>
            扩展时复制行属性
            </summary>
        </member>
    </members>
</doc>
